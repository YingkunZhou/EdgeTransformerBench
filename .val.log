$ python main.py --model efficientformerv2_s0 --weights weights/eformer_s0_450.pth --data-path imagenet/val
Creating model: efficientformerv2_s0
dict_keys(['model', 'optimizer', 'lr_scheduler', 'epoch', 'model_ema', 'scaler', 'args'])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='efficientformerv2_s0', model_ema=False, num_workers=10, pin_mem=True, use_amp=False, usi_eval=False, weights='weights/eformer_s0_450.pth')
number of params: 3600256
Test:  [  0/521]  eta: 1:12:16  loss: 0.4181 (0.4181)  acc1: 91.6667 (91.6667)  acc5: 96.8750 (96.8750)  time: 8.3236  data: 3.2120  max mem: 625
Test:  [ 50/521]  eta: 0:03:35  loss: 0.5384 (0.6827)  acc1: 86.4583 (82.5980)  acc5: 96.8750 (95.4861)  time: 0.2655  data: 0.0007  max mem: 625
Test:  [100/521]  eta: 0:02:32  loss: 0.8546 (0.7015)  acc1: 78.1250 (82.1988)  acc5: 94.7917 (95.3795)  time: 0.2673  data: 0.0007  max mem: 625
Test:  [150/521]  eta: 0:02:02  loss: 0.5824 (0.7180)  acc1: 83.3333 (81.3052)  acc5: 96.8750 (95.6954)  time: 0.2668  data: 0.0007  max mem: 625
Test:  [200/521]  eta: 0:01:41  loss: 0.6499 (0.7096)  acc1: 81.2500 (81.7061)  acc5: 95.8333 (95.8022)  time: 0.2665  data: 0.0008  max mem: 625
Test:  [250/521]  eta: 0:01:22  loss: 1.0343 (0.7799)  acc1: 75.0000 (80.1336)  acc5: 89.5833 (94.8788)  time: 0.2674  data: 0.0009  max mem: 625
Test:  [300/521]  eta: 0:01:06  loss: 0.7448 (0.8357)  acc1: 80.2083 (78.9521)  acc5: 93.7500 (94.2103)  time: 0.2655  data: 0.0007  max mem: 625
Test:  [350/521]  eta: 0:00:50  loss: 1.0551 (0.8815)  acc1: 70.8333 (77.8727)  acc5: 91.6667 (93.6550)  time: 0.2665  data: 0.0007  max mem: 625
Test:  [400/521]  eta: 0:00:35  loss: 1.1707 (0.9155)  acc1: 70.8333 (77.1509)  acc5: 89.5833 (93.2383)  time: 0.2658  data: 0.0007  max mem: 625
Test:  [450/521]  eta: 0:00:20  loss: 1.2331 (0.9466)  acc1: 68.7500 (76.4620)  acc5: 90.6250 (92.8492)  time: 0.2658  data: 0.0007  max mem: 625
Test:  [500/521]  eta: 0:00:05  loss: 0.7748 (0.9520)  acc1: 79.1667 (76.2600)  acc5: 95.8333 (92.8061)  time: 0.2661  data: 0.0007  max mem: 625
Test:  [520/521]  eta: 0:00:00  loss: 0.7954 (0.9522)  acc1: 76.0417 (76.2400)  acc5: 95.8333 (92.8180)  time: 0.3057  data: 0.0004  max mem: 625
Test: Total time: 0:02:29 (0.2867 s / it)
* Acc@1 76.240 Acc@5 92.818 loss 0.952
-0.0744948461651802 1.7916018962860107
Accuracy on 50000 test images: 76.2%

Test: Total time: 0:01:11 (0.0286 s / it)
* Acc@1 76.280 Acc@5 93.640 loss 0.907
0.09954121708869934 1.5328433513641357
Accuracy on 2500 test images: 76.3%

--------------------------------------------

$ python main.py --model efficientformerv2_s1 --weights weights/eformer_s1_450.pth --data-path imagenet/val
Creating model: efficientformerv2_s1
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='efficientformerv2_s1', model_ema=False, num_workers=10, pin_mem=True, use_amp=False, usi_eval=False, weights='weights/eformer_s1_450.pth')
number of params: 6185560
Test:  [  0/521]  eta: 1:05:59  loss: 0.2789 (0.2789)  acc1: 95.8333 (95.8333)  acc5: 97.9167 (97.9167)  time: 7.6004  data: 1.9049  max mem: 635
Test:  [ 50/521]  eta: 0:03:58  loss: 0.5026 (0.5909)  acc1: 87.5000 (84.9673)  acc5: 96.8750 (96.7116)  time: 0.3645  data: 0.0008  max mem: 635
Test:  [100/521]  eta: 0:02:55  loss: 0.5439 (0.5996)  acc1: 86.4583 (85.0248)  acc5: 96.8750 (96.4831)  time: 0.3272  data: 0.0007  max mem: 635
Test:  [150/521]  eta: 0:02:23  loss: 0.5933 (0.6212)  acc1: 85.4167 (84.2370)  acc5: 96.8750 (96.6129)  time: 0.3270  data: 0.0007  max mem: 635
Test:  [200/521]  eta: 0:01:59  loss: 0.5239 (0.6153)  acc1: 87.5000 (84.5097)  acc5: 97.9167 (96.7610)  time: 0.3268  data: 0.0007  max mem: 635
Test:  [250/521]  eta: 0:01:38  loss: 0.7428 (0.6698)  acc1: 78.1250 (83.1424)  acc5: 93.7500 (96.1778)  time: 0.3269  data: 0.0009  max mem: 635
Test:  [300/521]  eta: 0:01:18  loss: 0.9628 (0.7138)  acc1: 77.0833 (82.1186)  acc5: 93.7500 (95.7018)  time: 0.3263  data: 0.0007  max mem: 635
Test:  [350/521]  eta: 0:01:00  loss: 0.9138 (0.7513)  acc1: 76.0417 (81.0927)  acc5: 93.7500 (95.3199)  time: 0.3263  data: 0.0007  max mem: 635
Test:  [400/521]  eta: 0:00:42  loss: 0.8888 (0.7750)  acc1: 76.0417 (80.5460)  acc5: 93.7500 (95.0255)  time: 0.3273  data: 0.0008  max mem: 635
Test:  [450/521]  eta: 0:00:24  loss: 1.0163 (0.8013)  acc1: 76.0417 (79.9035)  acc5: 92.7083 (94.7385)  time: 0.3263  data: 0.0008  max mem: 635
Test:  [500/521]  eta: 0:00:07  loss: 0.7597 (0.8067)  acc1: 81.2500 (79.7738)  acc5: 95.8333 (94.7168)  time: 0.3262  data: 0.0008  max mem: 635
Test:  [520/521]  eta: 0:00:00  loss: 0.7491 (0.8092)  acc1: 80.2083 (79.6960)  acc5: 95.8333 (94.7020)  time: 0.3442  data: 0.0006  max mem: 635
Test: Total time: 0:03:00 (0.3462 s / it)
* Acc@1 79.696 Acc@5 94.702 loss 0.809
-0.07033006101846695 1.5629043579101562
Accuracy on 50000 test images: 79.7%

Test: Total time: 0:01:24 (0.0338 s / it)
* Acc@1 78.800 Acc@5 95.760 loss 0.785
0.07811930030584335 1.428672432899475
Accuracy on 2500 test images: 78.8%

$ python main.py --model efficientformerv2_s1 --weights weights/eformer_s1_450.pth --data-path imagenet/val --use_amp
Creating model: efficientformerv2_s1
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='efficientformerv2_s1', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/eformer_s1_450.pth')
number of params: 6185560
Test:  [  0/521]  eta: 1:56:26  loss: 0.2879 (0.2879)  acc1: 95.8333 (95.8333)  acc5: 97.9167 (97.9167)  time: 13.4092  data: 1.4166  max mem: 835
Test:  [ 50/521]  eta: 0:04:24  loss: 0.4994 (0.5942)  acc1: 87.5000 (85.0490)  acc5: 96.8750 (96.7116)  time: 0.3046  data: 0.0007  max mem: 835
Test:  [100/521]  eta: 0:02:56  loss: 0.5390 (0.6024)  acc1: 87.5000 (84.9629)  acc5: 96.8750 (96.4109)  time: 0.2736  data: 0.0008  max mem: 835
Test:  [150/521]  eta: 0:02:17  loss: 0.6051 (0.6241)  acc1: 84.3750 (84.1749)  acc5: 96.8750 (96.5577)  time: 0.2734  data: 0.0007  max mem: 835
Test:  [200/521]  eta: 0:01:51  loss: 0.5304 (0.6173)  acc1: 87.5000 (84.4631)  acc5: 97.9167 (96.6936)  time: 0.2733  data: 0.0008  max mem: 835
Test:  [250/521]  eta: 0:01:29  loss: 0.7483 (0.6706)  acc1: 78.1250 (83.1632)  acc5: 93.7500 (96.1238)  time: 0.2736  data: 0.0007  max mem: 835
Test:  [300/521]  eta: 0:01:11  loss: 0.9604 (0.7152)  acc1: 78.1250 (82.1013)  acc5: 93.7500 (95.6568)  time: 0.2735  data: 0.0007  max mem: 835
Test:  [350/521]  eta: 0:00:53  loss: 0.8976 (0.7529)  acc1: 77.0833 (81.0808)  acc5: 93.7500 (95.2695)  time: 0.2732  data: 0.0007  max mem: 835
Test:  [400/521]  eta: 0:00:37  loss: 0.8951 (0.7771)  acc1: 76.0417 (80.4941)  acc5: 93.7500 (94.9995)  time: 0.2736  data: 0.0007  max mem: 835
Test:  [450/521]  eta: 0:00:21  loss: 0.9986 (0.8028)  acc1: 76.0417 (79.8804)  acc5: 92.7083 (94.7154)  time: 0.2736  data: 0.0008  max mem: 835
Test:  [500/521]  eta: 0:00:06  loss: 0.7554 (0.8081)  acc1: 81.2500 (79.7634)  acc5: 95.8333 (94.6919)  time: 0.2738  data: 0.0007  max mem: 835
Test:  [520/521]  eta: 0:00:00  loss: 0.7374 (0.8105)  acc1: 79.1667 (79.6780)  acc5: 95.8333 (94.6800)  time: 0.3106  data: 0.0006  max mem: 835
Test: Total time: 0:02:39 (0.3055 s / it)
* Acc@1 79.678 Acc@5 94.680 loss 0.811
-0.07098388671875 1.560546875
Accuracy on 50000 test images: 79.7%

--------------------------------------------

$ python main.py --model efficientformerv2_s2 --weights weights/eformer_s2_450.pth --data-path imagenet/val --use_amp
Creating model: efficientformerv2_s2
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='efficientformerv2_s2', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/eformer_s2_450.pth')
number of params: 12710112
Test:  [  0/521]  eta: 2:20:58  loss: 0.2685 (0.2685)  acc1: 93.7500 (93.7500)  acc5: 98.9583 (98.9583)  time: 16.2360  data: 6.7039  max mem: 861
Test:  [ 50/521]  eta: 0:06:15  loss: 0.4287 (0.5308)  acc1: 88.5417 (86.2745)  acc5: 97.9167 (97.6103)  time: 0.4892  data: 0.0007  max mem: 861
Test:  [100/521]  eta: 0:04:29  loss: 0.4740 (0.5359)  acc1: 88.5417 (86.5408)  acc5: 96.8750 (97.4216)  time: 0.4772  data: 0.0007  max mem: 861
Test:  [150/521]  eta: 0:03:37  loss: 0.5078 (0.5585)  acc1: 86.4583 (85.8030)  acc5: 97.9167 (97.4545)  time: 0.4767  data: 0.0007  max mem: 861
Test:  [200/521]  eta: 0:02:59  loss: 0.5010 (0.5537)  acc1: 88.5417 (86.1474)  acc5: 97.9167 (97.5073)  time: 0.4766  data: 0.0007  max mem: 861
Test:  [250/521]  eta: 0:02:26  loss: 0.6513 (0.5988)  acc1: 83.3333 (85.0224)  acc5: 95.8333 (97.0576)  time: 0.4754  data: 0.0008  max mem: 861
Test:  [300/521]  eta: 0:01:57  loss: 0.7969 (0.6385)  acc1: 80.2083 (84.1189)  acc5: 94.7917 (96.6570)  time: 0.4761  data: 0.0007  max mem: 861
Test:  [350/521]  eta: 0:01:29  loss: 0.7575 (0.6719)  acc1: 80.2083 (83.3304)  acc5: 94.7917 (96.2963)  time: 0.4756  data: 0.0007  max mem: 861
Test:  [400/521]  eta: 0:01:02  loss: 0.7938 (0.6928)  acc1: 81.2500 (82.8917)  acc5: 94.7917 (96.0178)  time: 0.4756  data: 0.0008  max mem: 861
Test:  [450/521]  eta: 0:00:36  loss: 0.8347 (0.7145)  acc1: 80.2083 (82.3101)  acc5: 94.7917 (95.8426)  time: 0.4758  data: 0.0007  max mem: 861
Test:  [500/521]  eta: 0:00:10  loss: 0.6644 (0.7197)  acc1: 81.2500 (82.1004)  acc5: 95.8333 (95.8271)  time: 0.4762  data: 0.0007  max mem: 861
Test:  [520/521]  eta: 0:00:00  loss: 0.6550 (0.7226)  acc1: 82.2917 (82.0020)  acc5: 96.8750 (95.8280)  time: 0.5153  data: 0.0006  max mem: 861
Test: Total time: 0:04:26 (0.5117 s / it)
* Acc@1 82.002 Acc@5 95.828 loss 0.723
-0.06524658203125 1.314453125
Accuracy on 50000 test images: 82.0%

Test: Total time: 0:01:56 (0.0466 s / it)
* Acc@1 81.960 Acc@5 96.840 loss 0.682
0.16462500393390656 1.135219931602478
Accuracy on 2500 test images: 82.0%

==================================================================================================================================================

$ python main.py --model LeViT_128S --weights weights/LeViT-128S-96703c44.pth --data-path imagenet/val --use_amp
Creating model: LeViT_128S
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='LeViT_128S', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/LeViT-128S-96703c44.pth')
number of params: 7777058
Test:  [  0/521]  eta: 0:41:13  loss: 0.3522 (0.3522)  acc1: 94.7917 (94.7917)  acc5: 97.9167 (97.9167)  time: 4.7481  data: 1.3469  max mem: 263
Test:  [ 50/521]  eta: 0:01:19  loss: 0.6116 (0.6950)  acc1: 84.3750 (82.1078)  acc5: 95.8333 (95.4248)  time: 0.0780  data: 0.0015  max mem: 263
Test:  [100/521]  eta: 0:00:53  loss: 0.6610 (0.7020)  acc1: 83.3333 (82.1885)  acc5: 94.7917 (95.2764)  time: 0.0848  data: 0.0271  max mem: 263
Test:  [150/521]  eta: 0:00:41  loss: 0.6865 (0.7214)  acc1: 80.2083 (81.3190)  acc5: 96.8750 (95.5574)  time: 0.0832  data: 0.0279  max mem: 263
Test:  [200/521]  eta: 0:00:33  loss: 0.6247 (0.7111)  acc1: 84.3750 (81.6439)  acc5: 95.8333 (95.7452)  time: 0.0793  data: 0.0350  max mem: 263
Test:  [250/521]  eta: 0:00:27  loss: 0.9443 (0.7827)  acc1: 76.0417 (80.2249)  acc5: 91.6667 (94.8996)  time: 0.0807  data: 0.0338  max mem: 263
Test:  [300/521]  eta: 0:00:21  loss: 1.1061 (0.8332)  acc1: 72.9167 (79.1771)  acc5: 91.6667 (94.3245)  time: 0.0789  data: 0.0370  max mem: 263
Test:  [350/521]  eta: 0:00:16  loss: 1.1705 (0.8821)  acc1: 71.8750 (78.0864)  acc5: 91.6667 (93.7144)  time: 0.0820  data: 0.0386  max mem: 263
Test:  [400/521]  eta: 0:00:11  loss: 1.0603 (0.9164)  acc1: 73.9583 (77.3665)  acc5: 90.6250 (93.2564)  time: 0.0791  data: 0.0324  max mem: 263
Test:  [450/521]  eta: 0:00:06  loss: 1.2169 (0.9487)  acc1: 71.8750 (76.6376)  acc5: 90.6250 (92.8723)  time: 0.0768  data: 0.0325  max mem: 263
Test:  [500/521]  eta: 0:00:01  loss: 0.8803 (0.9519)  acc1: 77.0833 (76.5095)  acc5: 92.7083 (92.8664)  time: 0.0794  data: 0.0346  max mem: 263
Test:  [520/521]  eta: 0:00:00  loss: 0.7590 (0.9511)  acc1: 78.1250 (76.5380)  acc5: 95.8333 (92.8980)  time: 0.0816  data: 0.0359  max mem: 263
Test: Total time: 0:00:46 (0.0896 s / it)
* Acc@1 76.538 Acc@5 92.898 loss 0.951
-0.034912109375 1.4052734375
Accuracy on 50000 test images: 76.5%

Test: Total time: 0:00:58 (0.0235 s / it)
* Acc@1 75.920 Acc@5 94.360 loss 0.906
0.017895333468914032 1.0660666227340698
Accuracy on 2500 test images: 75.9%

$ python main.py --model LeViT_c_128S --weights weights/LeViT-128S-96703c44.pth --data-path imagenet/val --use_amp
Creating model: LeViT_c_128S
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='LeViT_c_128S', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/LeViT-128S-96703c44.pth')
number of params: 7777058
Test:  [  0/521]  eta: 0:44:17  loss: 0.3522 (0.3522)  acc1: 94.7917 (94.7917)  acc5: 97.9167 (97.9167)  time: 5.1007  data: 1.3764  max mem: 309
Test:  [ 50/521]  eta: 0:01:26  loss: 0.6116 (0.6950)  acc1: 84.3750 (82.1078)  acc5: 95.8333 (95.4248)  time: 0.0856  data: 0.0047  max mem: 309
Test:  [100/521]  eta: 0:00:56  loss: 0.6610 (0.7020)  acc1: 83.3333 (82.1885)  acc5: 94.7917 (95.2764)  time: 0.0819  data: 0.0292  max mem: 309
Test:  [150/521]  eta: 0:00:43  loss: 0.6865 (0.7214)  acc1: 80.2083 (81.3190)  acc5: 96.8750 (95.5574)  time: 0.0872  data: 0.0403  max mem: 309
Test:  [200/521]  eta: 0:00:35  loss: 0.6247 (0.7111)  acc1: 84.3750 (81.6439)  acc5: 95.8333 (95.7452)  time: 0.0861  data: 0.0376  max mem: 309
Test:  [250/521]  eta: 0:00:28  loss: 0.9443 (0.7827)  acc1: 76.0417 (80.2249)  acc5: 91.6667 (94.8996)  time: 0.0771  data: 0.0329  max mem: 309
Test:  [300/521]  eta: 0:00:21  loss: 1.1061 (0.8332)  acc1: 72.9167 (79.1771)  acc5: 91.6667 (94.3245)  time: 0.0782  data: 0.0317  max mem: 309
Test:  [350/521]  eta: 0:00:16  loss: 1.1705 (0.8821)  acc1: 71.8750 (78.0864)  acc5: 91.6667 (93.7144)  time: 0.0812  data: 0.0367  max mem: 309
Test:  [400/521]  eta: 0:00:11  loss: 1.0603 (0.9164)  acc1: 73.9583 (77.3665)  acc5: 90.6250 (93.2564)  time: 0.0831  data: 0.0380  max mem: 309
Test:  [450/521]  eta: 0:00:06  loss: 1.2169 (0.9487)  acc1: 71.8750 (76.6376)  acc5: 90.6250 (92.8723)  time: 0.0764  data: 0.0312  max mem: 309
Test:  [500/521]  eta: 0:00:01  loss: 0.8803 (0.9519)  acc1: 77.0833 (76.5095)  acc5: 92.7083 (92.8664)  time: 0.0787  data: 0.0331  max mem: 309
Test:  [520/521]  eta: 0:00:00  loss: 0.7590 (0.9511)  acc1: 78.1250 (76.5380)  acc5: 95.8333 (92.9000)  time: 0.0890  data: 0.0326  max mem: 309
Test: Total time: 0:00:48 (0.0923 s / it)
* Acc@1 76.538 Acc@5 92.900 loss 0.951
-0.034912109375 1.4052734375
Accuracy on 50000 test images: 76.5%

$ python main.py --model LeViT_128 --weights weights/LeViT-128-b88c2750.pth --data-path imagenet/val
Creating model: LeViT_128
dict_keys(['model'])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='LeViT_128', model_ema=False, num_workers=10, pin_mem=True, use_amp=False, usi_eval=False, weights='weights/LeViT-128-b88c2750.pth')
number of params: 9213936
Test:  [  0/521]  eta: 0:45:41  loss: 0.3524 (0.3524)  acc1: 92.7083 (92.7083)  acc5: 97.9167 (97.9167)  time: 5.2614  data: 1.4710  max mem: 318
Test:  [ 50/521]  eta: 0:01:44  loss: 0.4155 (0.6211)  acc1: 88.5417 (84.2729)  acc5: 96.8750 (96.2418)  time: 0.0852  data: 0.0008  max mem: 318
Test:  [100/521]  eta: 0:01:04  loss: 0.8114 (0.6309)  acc1: 80.2083 (84.0862)  acc5: 95.8333 (96.1118)  time: 0.0824  data: 0.0006  max mem: 318
Test:  [150/521]  eta: 0:00:48  loss: 0.5550 (0.6513)  acc1: 83.3333 (83.2644)  acc5: 97.9167 (96.2403)  time: 0.0836  data: 0.0014  max mem: 318
Test:  [200/521]  eta: 0:00:37  loss: 0.6399 (0.6439)  acc1: 84.3750 (83.5562)  acc5: 96.8750 (96.4138)  time: 0.0827  data: 0.0008  max mem: 318
Test:  [250/521]  eta: 0:00:30  loss: 0.9213 (0.7111)  acc1: 73.9583 (82.0676)  acc5: 91.6667 (95.5843)  time: 0.0842  data: 0.0008  max mem: 318
Test:  [300/521]  eta: 0:00:23  loss: 0.6359 (0.7599)  acc1: 87.5000 (81.0424)  acc5: 93.7500 (95.0408)  time: 0.0819  data: 0.0008  max mem: 318
Test:  [350/521]  eta: 0:00:17  loss: 0.9527 (0.8023)  acc1: 71.8750 (79.9947)  acc5: 93.7500 (94.6373)  time: 0.0832  data: 0.0007  max mem: 318
Test:  [400/521]  eta: 0:00:12  loss: 0.9650 (0.8303)  acc1: 76.0417 (79.3927)  acc5: 90.6250 (94.2799)  time: 0.0838  data: 0.0009  max mem: 318
Test:  [450/521]  eta: 0:00:07  loss: 1.0423 (0.8594)  acc1: 75.0000 (78.7186)  acc5: 90.6250 (93.9348)  time: 0.0829  data: 0.0010  max mem: 318
Test:  [500/521]  eta: 0:00:02  loss: 0.6467 (0.8646)  acc1: 80.2083 (78.6053)  acc5: 96.8750 (93.9101)  time: 0.0835  data: 0.0009  max mem: 318
Test:  [520/521]  eta: 0:00:00  loss: 0.7585 (0.8645)  acc1: 78.1250 (78.5820)  acc5: 96.8750 (93.9420)  time: 0.0900  data: 0.0003  max mem: 318
Test: Total time: 0:00:50 (0.0974 s / it)
* Acc@1 78.582 Acc@5 93.942 loss 0.865
-0.04066606983542442 1.3680126667022705
Accuracy on 50000 test images: 78.6%

Test: Total time: 0:01:13 (0.0295 s / it)
* Acc@1 79.320 Acc@5 95.160 loss 0.809
0.005430952180176973 1.1060432195663452
Accuracy on 2500 test images: 79.3%

$ python main.py --model LeViT_192 --weights weights/LeViT-192-92712e41.pth --data-path imagenet/val --use_amp
Creating model: LeViT_192
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='LeViT_192', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/LeViT-192-92712e41.pth')
number of params: 10947069
Test:  [  0/521]  eta: 0:53:33  loss: 0.3119 (0.3119)  acc1: 93.7500 (93.7500)  acc5: 97.9167 (97.9167)  time: 6.1670  data: 2.9940  max mem: 315
Test:  [ 50/521]  eta: 0:01:37  loss: 0.4943 (0.5884)  acc1: 86.4583 (85.1716)  acc5: 96.8750 (96.5686)  time: 0.0887  data: 0.0010  max mem: 315
Test:  [100/521]  eta: 0:00:59  loss: 0.5665 (0.5873)  acc1: 86.4583 (85.1588)  acc5: 96.8750 (96.5862)  time: 0.0736  data: 0.0103  max mem: 315
Test:  [150/521]  eta: 0:00:45  loss: 0.5809 (0.6101)  acc1: 83.3333 (84.2301)  acc5: 97.9167 (96.7370)  time: 0.0868  data: 0.0215  max mem: 315
Test:  [200/521]  eta: 0:00:36  loss: 0.5242 (0.6038)  acc1: 87.5000 (84.5927)  acc5: 96.8750 (96.8543)  time: 0.0846  data: 0.0242  max mem: 315
Test:  [250/521]  eta: 0:00:29  loss: 0.7243 (0.6629)  acc1: 78.1250 (83.1092)  acc5: 94.7917 (96.2359)  time: 0.0815  data: 0.0183  max mem: 315
Test:  [300/521]  eta: 0:00:22  loss: 0.9511 (0.7083)  acc1: 77.0833 (82.1186)  acc5: 93.7500 (95.7018)  time: 0.0780  data: 0.0149  max mem: 315
Test:  [350/521]  eta: 0:00:16  loss: 0.9087 (0.7463)  acc1: 76.0417 (81.2085)  acc5: 94.7917 (95.3407)  time: 0.0787  data: 0.0151  max mem: 315
Test:  [400/521]  eta: 0:00:11  loss: 0.8656 (0.7704)  acc1: 78.1250 (80.6863)  acc5: 93.7500 (95.0255)  time: 0.0842  data: 0.0220  max mem: 315
Test:  [450/521]  eta: 0:00:06  loss: 1.0248 (0.7980)  acc1: 76.0417 (80.0605)  acc5: 92.7083 (94.7432)  time: 0.0767  data: 0.0124  max mem: 315
Test:  [500/521]  eta: 0:00:01  loss: 0.7603 (0.8030)  acc1: 80.2083 (79.9235)  acc5: 94.7917 (94.7376)  time: 0.0809  data: 0.0193  max mem: 315
Test:  [520/521]  eta: 0:00:00  loss: 0.7072 (0.8042)  acc1: 80.2083 (79.8760)  acc5: 96.8750 (94.7480)  time: 0.0838  data: 0.0193  max mem: 315
Test: Total time: 0:00:48 (0.0933 s / it)
* Acc@1 79.876 Acc@5 94.748 loss 0.804
-0.0041351318359375 1.3291015625
Accuracy on 50000 test images: 79.9%

Test: Total time: 0:01:15 (0.0300 s / it)
* Acc@1 79.800 Acc@5 95.600 loss 0.790
-0.07333225011825562 1.0018742084503174
Accuracy on 2500 test images: 79.8%

$ python main.py --model LeViT_256 --weights weights/LeViT-256-13b5763e.pth --data-path imagenet/val
Creating model: LeViT_256
dict_keys(['model'])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='LeViT_256', model_ema=False, num_workers=10, pin_mem=True, use_amp=False, usi_eval=False, weights='weights/LeViT-256-13b5763e.pth')
number of params: 18893876
Test:  [  0/521]  eta: 1:00:15  loss: 0.2504 (0.2504)  acc1: 95.8333 (95.8333)  acc5: 98.9583 (98.9583)  time: 6.9401  data: 3.0496  max mem: 575
Test:  [ 50/521]  eta: 0:02:23  loss: 0.3050 (0.5338)  acc1: 90.6250 (86.3766)  acc5: 97.9167 (97.4060)  time: 0.1398  data: 0.0007  max mem: 575
Test:  [100/521]  eta: 0:01:33  loss: 0.6646 (0.5332)  acc1: 84.3750 (86.7265)  acc5: 95.8333 (97.1947)  time: 0.1373  data: 0.0008  max mem: 575
Test:  [150/521]  eta: 0:01:11  loss: 0.4353 (0.5572)  acc1: 87.5000 (86.0651)  acc5: 97.9167 (97.2958)  time: 0.1377  data: 0.0006  max mem: 575
Test:  [200/521]  eta: 0:00:57  loss: 0.5658 (0.5581)  acc1: 83.3333 (86.2251)  acc5: 97.9167 (97.3932)  time: 0.1378  data: 0.0006  max mem: 575
Test:  [250/521]  eta: 0:00:46  loss: 0.9708 (0.6151)  acc1: 80.2083 (84.8938)  acc5: 92.7083 (96.7630)  time: 0.1374  data: 0.0008  max mem: 575
Test:  [300/521]  eta: 0:00:36  loss: 0.4934 (0.6569)  acc1: 85.4167 (83.8940)  acc5: 95.8333 (96.3559)  time: 0.1373  data: 0.0008  max mem: 575
Test:  [350/521]  eta: 0:00:27  loss: 0.7783 (0.6919)  acc1: 76.0417 (82.8733)  acc5: 95.8333 (95.9995)  time: 0.1376  data: 0.0008  max mem: 575
Test:  [400/521]  eta: 0:00:19  loss: 0.7946 (0.7146)  acc1: 80.2083 (82.4371)  acc5: 92.7083 (95.7294)  time: 0.1377  data: 0.0009  max mem: 575
Test:  [450/521]  eta: 0:00:11  loss: 0.9299 (0.7382)  acc1: 76.0417 (81.8159)  acc5: 92.7083 (95.4753)  time: 0.1376  data: 0.0008  max mem: 575
Test:  [500/521]  eta: 0:00:03  loss: 0.6436 (0.7432)  acc1: 82.2917 (81.6638)  acc5: 96.8750 (95.4612)  time: 0.1365  data: 0.0007  max mem: 575
Test:  [520/521]  eta: 0:00:00  loss: 0.7122 (0.7453)  acc1: 78.1250 (81.5920)  acc5: 95.8333 (95.4580)  time: 0.1504  data: 0.0003  max mem: 575
Test: Total time: 0:01:20 (0.1545 s / it)
* Acc@1 81.592 Acc@5 95.458 loss 0.745
-0.03576463460922241 1.2441368103027344
Accuracy on 50000 test images: 81.6%

$ python main.py --model LeViT_c_256 --weights weights/LeViT-256-13b5763e.pth --data-path imagenet/val --use_amp
Creating model: LeViT_c_256
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='LeViT_c_256', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/LeViT-256-13b5763e.pth')
number of params: 18893876
Test:  [  0/521]  eta: 1:32:17  loss: 0.2500 (0.2500)  acc1: 95.8333 (95.8333)  acc5: 98.9583 (98.9583)  time: 10.6281  data: 2.9685  max mem: 428
Test:  [ 50/521]  eta: 0:02:36  loss: 0.4373 (0.5338)  acc1: 87.5000 (86.3562)  acc5: 97.9167 (97.4060)  time: 0.1272  data: 0.0009  max mem: 428
Test:  [100/521]  eta: 0:01:29  loss: 0.4636 (0.5332)  acc1: 88.5417 (86.7059)  acc5: 96.8750 (97.1947)  time: 0.0911  data: 0.0011  max mem: 428
Test:  [150/521]  eta: 0:01:03  loss: 0.4963 (0.5572)  acc1: 87.5000 (86.0237)  acc5: 97.9167 (97.2958)  time: 0.0899  data: 0.0010  max mem: 428
Test:  [200/521]  eta: 0:00:48  loss: 0.5069 (0.5581)  acc1: 88.5417 (86.1888)  acc5: 97.9167 (97.3932)  time: 0.0903  data: 0.0011  max mem: 428
Test:  [250/521]  eta: 0:00:37  loss: 0.7450 (0.6151)  acc1: 80.2083 (84.8564)  acc5: 94.7917 (96.7588)  time: 0.0896  data: 0.0008  max mem: 428
Test:  [300/521]  eta: 0:00:29  loss: 0.8435 (0.6569)  acc1: 79.1667 (83.8628)  acc5: 93.7500 (96.3524)  time: 0.0898  data: 0.0009  max mem: 428
Test:  [350/521]  eta: 0:00:21  loss: 0.7789 (0.6919)  acc1: 78.1250 (82.8496)  acc5: 95.8333 (95.9995)  time: 0.0889  data: 0.0007  max mem: 428
Test:  [400/521]  eta: 0:00:14  loss: 0.7873 (0.7146)  acc1: 80.2083 (82.4138)  acc5: 93.7500 (95.7294)  time: 0.0895  data: 0.0009  max mem: 428
Test:  [450/521]  eta: 0:00:08  loss: 0.9108 (0.7382)  acc1: 78.1250 (81.7951)  acc5: 92.7083 (95.4776)  time: 0.0894  data: 0.0009  max mem: 428
Test:  [500/521]  eta: 0:00:02  loss: 0.6893 (0.7432)  acc1: 80.2083 (81.6430)  acc5: 95.8333 (95.4632)  time: 0.0900  data: 0.0010  max mem: 428
Test:  [520/521]  eta: 0:00:00  loss: 0.6808 (0.7453)  acc1: 80.2083 (81.5720)  acc5: 96.8750 (95.4600)  time: 0.1017  data: 0.0007  max mem: 428
Test: Total time: 0:00:59 (0.1150 s / it)
* Acc@1 81.572 Acc@5 95.460 loss 0.745
-0.035736083984375 1.244140625
Accuracy on 50000 test images: 81.6%

Test: Total time: 0:01:11 (0.0287 s / it)
* Acc@1 81.240 Acc@5 96.040 loss 0.741
-0.015004237182438374 1.2045691013336182
Accuracy on 2500 test images: 81.2%

$ python main.py --model edgenext_xx_small --weights weights/edgenext_xx_small.pth --data-path imagenet/val --use_amp
Creating model: edgenext_xx_small
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='edgenext_xx_small', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/edgenext_xx_small.pth')
number of params: 1327216
Test:  [  0/521]  eta: 1:17:43  loss: 0.6906 (0.6906)  acc1: 82.2917 (82.2917)  acc5: 97.9167 (97.9167)  time: 8.9502  data: 1.4389  max mem: 333
Test:  [ 50/521]  eta: 0:02:33  loss: 0.8712 (0.9508)  acc1: 80.2083 (78.4926)  acc5: 94.7917 (94.1381)  time: 0.1545  data: 0.0008  max mem: 333
Test:  [100/521]  eta: 0:01:32  loss: 1.0105 (0.9772)  acc1: 79.1667 (78.1663)  acc5: 93.7500 (93.8635)  time: 0.1122  data: 0.0007  max mem: 333
Test:  [150/521]  eta: 0:01:08  loss: 1.0054 (0.9810)  acc1: 77.0833 (77.5731)  acc5: 94.7917 (94.1846)  time: 0.1129  data: 0.0007  max mem: 333
Test:  [200/521]  eta: 0:00:53  loss: 0.8961 (0.9644)  acc1: 80.2083 (78.0835)  acc5: 94.7917 (94.3356)  time: 0.1127  data: 0.0007  max mem: 333
Test:  [250/521]  eta: 0:00:42  loss: 1.3166 (1.0536)  acc1: 69.7917 (76.0873)  acc5: 88.5417 (92.9366)  time: 0.1128  data: 0.0008  max mem: 333
Test:  [300/521]  eta: 0:00:32  loss: 1.4280 (1.1199)  acc1: 65.6250 (74.5536)  acc5: 89.5833 (92.0266)  time: 0.1127  data: 0.0006  max mem: 333
Test:  [350/521]  eta: 0:00:24  loss: 1.5290 (1.1822)  acc1: 65.6250 (73.1363)  acc5: 87.5000 (91.1562)  time: 0.1121  data: 0.0007  max mem: 333
Test:  [400/521]  eta: 0:00:16  loss: 1.4894 (1.2231)  acc1: 66.6667 (72.2802)  acc5: 86.4583 (90.5315)  time: 0.1125  data: 0.0007  max mem: 333
Test:  [450/521]  eta: 0:00:09  loss: 1.6117 (1.2627)  acc1: 64.5833 (71.4061)  acc5: 85.4167 (89.9344)  time: 0.1121  data: 0.0007  max mem: 333
Test:  [500/521]  eta: 0:00:02  loss: 1.2332 (1.2689)  acc1: 70.8333 (71.1972)  acc5: 90.6250 (89.8911)  time: 0.1120  data: 0.0007  max mem: 333
Test:  [520/521]  eta: 0:00:00  loss: 1.0938 (1.2660)  acc1: 73.9583 (71.2340)  acc5: 92.7083 (89.9240)  time: 0.1164  data: 0.0005  max mem: 333
Test: Total time: 0:01:09 (0.1341 s / it)
* Acc@1 71.234 Acc@5 89.924 loss 1.266
-0.005382537841796875 1.5849609375
Accuracy on 50000 test images: 71.2%

Test: Total time: 0:00:56 (0.0226 s / it)
* Acc@1 70.840 Acc@5 90.960 loss 1.197
0.02944941073656082 1.2706167697906494
Accuracy on 2500 test images: 70.8%

$ python main.py --model edgenext_x_small --weights weights/edgenext_x_small.pth --data-path imagenet/val --use_amp
Creating model: edgenext_x_small
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='edgenext_x_small', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/edgenext_x_small.pth')
number of params: 2336804
Test:  [  0/521]  eta: 1:22:17  loss: 0.4694 (0.4694)  acc1: 92.7083 (92.7083)  acc5: 97.9167 (97.9167)  time: 9.4761  data: 1.6386  max mem: 377
Test:  [ 50/521]  eta: 0:02:55  loss: 0.7166 (0.8090)  acc1: 82.2917 (81.3521)  acc5: 95.8333 (95.3840)  time: 0.1896  data: 0.0006  max mem: 377
Test:  [100/521]  eta: 0:01:54  loss: 0.8730 (0.8238)  acc1: 81.2500 (81.3325)  acc5: 94.7917 (95.1630)  time: 0.1726  data: 0.0006  max mem: 377
Test:  [150/521]  eta: 0:01:29  loss: 0.8393 (0.8366)  acc1: 81.2500 (80.6567)  acc5: 96.8750 (95.4332)  time: 0.1728  data: 0.0006  max mem: 377
Test:  [200/521]  eta: 0:01:11  loss: 0.7630 (0.8242)  acc1: 84.3750 (81.0220)  acc5: 95.8333 (95.6157)  time: 0.1731  data: 0.0006  max mem: 377
Test:  [250/521]  eta: 0:00:57  loss: 1.1325 (0.9032)  acc1: 72.9167 (79.2331)  acc5: 91.6667 (94.5427)  time: 0.1723  data: 0.0006  max mem: 377
Test:  [300/521]  eta: 0:00:45  loss: 1.2519 (0.9609)  acc1: 70.8333 (77.8828)  acc5: 90.6250 (93.8469)  time: 0.1727  data: 0.0006  max mem: 377
Test:  [350/521]  eta: 0:00:34  loss: 1.2954 (1.0125)  acc1: 70.8333 (76.7064)  acc5: 89.5833 (93.1950)  time: 0.1724  data: 0.0006  max mem: 377
Test:  [400/521]  eta: 0:00:23  loss: 1.3168 (1.0491)  acc1: 69.7917 (75.9118)  acc5: 89.5833 (92.6979)  time: 0.1724  data: 0.0005  max mem: 377
Test:  [450/521]  eta: 0:00:13  loss: 1.3974 (1.0855)  acc1: 67.7083 (75.0901)  acc5: 89.5833 (92.2233)  time: 0.1725  data: 0.0006  max mem: 377
Test:  [500/521]  eta: 0:00:04  loss: 1.0727 (1.0920)  acc1: 73.9583 (74.9168)  acc5: 92.7083 (92.1761)  time: 0.1721  data: 0.0006  max mem: 377
Test:  [520/521]  eta: 0:00:00  loss: 0.9702 (1.0919)  acc1: 77.0833 (74.8800)  acc5: 94.7917 (92.2000)  time: 0.1818  data: 0.0005  max mem: 377
Test: Total time: 0:01:40 (0.1932 s / it)
* Acc@1 74.880 Acc@5 92.200 loss 1.092
0.0020542144775390625 1.3916015625
Accuracy on 50000 test images: 74.9%

Test: Total time: 0:01:01 (0.0248 s / it)
* Acc@1 74.920 Acc@5 93.560 loss 1.022
0.02285463735461235 1.057183861732483
Accuracy on 2500 test images: 74.9%

$ python main.py --model edgenext_small --weights weights/edgenext_small.pth --data-path imagenet/val
Creating model: edgenext_small
dict_keys(['model', 'optimizer', 'epoch', 'scaler', 'args', 'model_ema'])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='edgenext_small', model_ema=False, num_workers=10, pin_mem=True, use_amp=False, usi_eval=False, weights='weights/edgenext_small.pth')
number of params: 5586832
Test:  [  0/521]  eta: 1:08:05  loss: 0.3961 (0.3961)  acc1: 94.7917 (94.7917)  acc5: 98.9583 (98.9583)  time: 7.8410  data: 3.5178  max mem: 821
Test:  [ 50/521]  eta: 0:03:39  loss: 0.5008 (0.6489)  acc1: 89.5833 (85.1307)  acc5: 96.8750 (96.9976)  time: 0.3040  data: 0.0006  max mem: 822
Test:  [100/521]  eta: 0:02:42  loss: 0.7548 (0.6544)  acc1: 81.2500 (85.0660)  acc5: 96.8750 (96.8647)  time: 0.3037  data: 0.0007  max mem: 822
Test:  [150/521]  eta: 0:02:12  loss: 0.5672 (0.6718)  acc1: 85.4167 (84.4854)  acc5: 97.9167 (96.9371)  time: 0.3038  data: 0.0006  max mem: 822
Test:  [200/521]  eta: 0:01:50  loss: 0.7205 (0.6628)  acc1: 83.3333 (84.7170)  acc5: 95.8333 (96.9942)  time: 0.3043  data: 0.0006  max mem: 822
Test:  [250/521]  eta: 0:01:31  loss: 1.0056 (0.7279)  acc1: 78.1250 (83.1009)  acc5: 92.7083 (96.2027)  time: 0.3035  data: 0.0006  max mem: 822
Test:  [300/521]  eta: 0:01:13  loss: 0.6312 (0.7743)  acc1: 83.3333 (82.0044)  acc5: 94.7917 (95.6984)  time: 0.3044  data: 0.0006  max mem: 822
Test:  [350/521]  eta: 0:00:55  loss: 1.0566 (0.8176)  acc1: 76.0417 (81.0096)  acc5: 93.7500 (95.1893)  time: 0.3038  data: 0.0007  max mem: 822
Test:  [400/521]  eta: 0:00:39  loss: 1.0258 (0.8459)  acc1: 76.0417 (80.4006)  acc5: 92.7083 (94.8566)  time: 0.3041  data: 0.0006  max mem: 822
Test:  [450/521]  eta: 0:00:22  loss: 1.1458 (0.8743)  acc1: 72.9167 (79.7141)  acc5: 92.7083 (94.5492)  time: 0.3038  data: 0.0006  max mem: 822
Test:  [500/521]  eta: 0:00:06  loss: 0.7621 (0.8796)  acc1: 80.2083 (79.4785)  acc5: 96.8750 (94.5214)  time: 0.3041  data: 0.0006  max mem: 822
Test:  [520/521]  eta: 0:00:00  loss: 0.8249 (0.8808)  acc1: 78.1250 (79.4120)  acc5: 95.8333 (94.5180)  time: 0.3182  data: 0.0003  max mem: 822
Test: Total time: 0:02:46 (0.3204 s / it)
* Acc@1 79.412 Acc@5 94.518 loss 0.881
0.0033393045887351036 1.1167610883712769
Accuracy on 50000 test images: 79.4%

Test: Total time: 0:01:04 (0.0259 s / it)
* Acc@1 79.200 Acc@5 95.640 loss 0.843
0.03848174214363098 0.7266080379486084
Accuracy on 2500 test images: 79.2%

$ python main.py --model edgenext_small --weights weights/edgenext_small.pth --data-path imagenet/val --use_amp
Creating model: edgenext_small
dict_keys(['model', 'optimizer', 'epoch', 'scaler', 'args', 'model_ema'])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='edgenext_small', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/edgenext_small.pth')
number of params: 5586832
Test:  [  0/521]  eta: 1:12:46  loss: 0.3964 (0.3964)  acc1: 94.7917 (94.7917)  acc5: 98.9583 (98.9583)  time: 8.3813  data: 2.9085  max mem: 534
Test:  [ 50/521]  eta: 0:03:13  loss: 0.5007 (0.6489)  acc1: 89.5833 (85.1511)  acc5: 96.8750 (96.9976)  time: 0.2368  data: 0.0005  max mem: 534
Test:  [100/521]  eta: 0:02:16  loss: 0.7550 (0.6544)  acc1: 81.2500 (85.0763)  acc5: 96.8750 (96.8750)  time: 0.2368  data: 0.0006  max mem: 534
Test:  [150/521]  eta: 0:01:49  loss: 0.5674 (0.6719)  acc1: 85.4167 (84.4992)  acc5: 97.9167 (96.9440)  time: 0.2369  data: 0.0006  max mem: 534
Test:  [200/521]  eta: 0:01:30  loss: 0.7205 (0.6629)  acc1: 83.3333 (84.7274)  acc5: 95.8333 (97.0046)  time: 0.2371  data: 0.0008  max mem: 534
Test:  [250/521]  eta: 0:01:13  loss: 1.0064 (0.7279)  acc1: 78.1250 (83.1092)  acc5: 92.7083 (96.2110)  time: 0.2374  data: 0.0005  max mem: 534
Test:  [300/521]  eta: 0:00:58  loss: 0.6318 (0.7743)  acc1: 83.3333 (82.0148)  acc5: 94.7917 (95.7053)  time: 0.2363  data: 0.0006  max mem: 534
Test:  [350/521]  eta: 0:00:44  loss: 1.0571 (0.8177)  acc1: 76.0417 (81.0185)  acc5: 93.7500 (95.1953)  time: 0.2367  data: 0.0006  max mem: 534
Test:  [400/521]  eta: 0:00:31  loss: 1.0255 (0.8460)  acc1: 76.0417 (80.3980)  acc5: 92.7083 (94.8644)  time: 0.2371  data: 0.0005  max mem: 534
Test:  [450/521]  eta: 0:00:18  loss: 1.1457 (0.8744)  acc1: 72.9167 (79.7118)  acc5: 91.6667 (94.5515)  time: 0.2375  data: 0.0006  max mem: 534
Test:  [500/521]  eta: 0:00:05  loss: 0.7620 (0.8797)  acc1: 80.2083 (79.4765)  acc5: 96.8750 (94.5214)  time: 0.2371  data: 0.0005  max mem: 534
Test:  [520/521]  eta: 0:00:00  loss: 0.8250 (0.8808)  acc1: 78.1250 (79.4080)  acc5: 95.8333 (94.5180)  time: 0.2713  data: 0.0003  max mem: 534
Test: Total time: 0:02:13 (0.2555 s / it)
* Acc@1 79.408 Acc@5 94.518 loss 0.881
0.0033397674560546875 1.1162109375
Accuracy on 50000 test images: 79.4%

$ python main.py --model edgenext_small --weights weights/edgenext_small.pth --data-path imagenet/val --use_amp --model-ema
Creating model: edgenext_small
dict_keys(['model', 'optimizer', 'epoch', 'scaler', 'args', 'model_ema'])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='edgenext_small', model_ema=True, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/edgenext_small.pth')
number of params: 5586832
Test:  [  0/521]  eta: 1:07:16  loss: 0.4034 (0.4034)  acc1: 94.7917 (94.7917)  acc5: 98.9583 (98.9583)  time: 7.7482  data: 3.1367  max mem: 534
Test:  [ 50/521]  eta: 0:03:12  loss: 0.5089 (0.6479)  acc1: 89.5833 (85.1716)  acc5: 96.8750 (96.9771)  time: 0.2372  data: 0.0005  max mem: 534
Test:  [100/521]  eta: 0:02:16  loss: 0.7583 (0.6542)  acc1: 79.1667 (85.0866)  acc5: 96.8750 (96.8544)  time: 0.2365  data: 0.0006  max mem: 534
Test:  [150/521]  eta: 0:01:49  loss: 0.5587 (0.6709)  acc1: 85.4167 (84.5337)  acc5: 97.9167 (96.9233)  time: 0.2374  data: 0.0006  max mem: 534
Test:  [200/521]  eta: 0:01:30  loss: 0.7136 (0.6618)  acc1: 83.3333 (84.7378)  acc5: 96.8750 (97.0046)  time: 0.2382  data: 0.0006  max mem: 534
Test:  [250/521]  eta: 0:01:13  loss: 0.9972 (0.7262)  acc1: 78.1250 (83.1217)  acc5: 92.7083 (96.2193)  time: 0.2372  data: 0.0005  max mem: 534
Test:  [300/521]  eta: 0:00:58  loss: 0.6259 (0.7722)  acc1: 82.2917 (82.0287)  acc5: 94.7917 (95.7399)  time: 0.2369  data: 0.0006  max mem: 534
Test:  [350/521]  eta: 0:00:44  loss: 1.0537 (0.8162)  acc1: 77.0833 (81.0126)  acc5: 93.7500 (95.2161)  time: 0.2376  data: 0.0006  max mem: 534
Test:  [400/521]  eta: 0:00:31  loss: 1.0360 (0.8441)  acc1: 75.0000 (80.3928)  acc5: 92.7083 (94.8852)  time: 0.2385  data: 0.0005  max mem: 534
Test:  [450/521]  eta: 0:00:18  loss: 1.1290 (0.8725)  acc1: 76.0417 (79.7118)  acc5: 92.7083 (94.5584)  time: 0.2370  data: 0.0006  max mem: 534
Test:  [500/521]  eta: 0:00:05  loss: 0.7533 (0.8779)  acc1: 80.2083 (79.4931)  acc5: 96.8750 (94.5297)  time: 0.2370  data: 0.0005  max mem: 534
Test:  [520/521]  eta: 0:00:00  loss: 0.8077 (0.8791)  acc1: 78.1250 (79.4200)  acc5: 95.8333 (94.5280)  time: 0.2700  data: 0.0003  max mem: 534
Test: Total time: 0:02:13 (0.2556 s / it)
* Acc@1 79.420 Acc@5 94.528 loss 0.879
0.0029888153076171875 1.1171875
Accuracy on 50000 test images: 79.4%

$ python main.py --model edgenext_small --weights weights/edgenext_small_usi.pth --data-path imagenet/val
Creating model: edgenext_small
dict_keys(['epoch', 'arch', 'state_dict', 'version', 'args', 'metric'])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='edgenext_small', model_ema=False, num_workers=10, pin_mem=True, use_amp=False, usi_eval=True, weights='weights/edgenext_small_usi.pth')
number of params: 5586832
Test:  [  0/521]  eta: 1:24:48  loss: 0.2793 (0.2793)  acc1: 94.7917 (94.7917)  acc5: 97.9167 (97.9167)  time: 9.7675  data: 5.6043  max mem: 821
Test:  [ 50/521]  eta: 0:03:59  loss: 0.4554 (0.5589)  acc1: 89.5833 (85.9886)  acc5: 97.9167 (97.0588)  time: 0.3040  data: 0.0005  max mem: 822
Test:  [100/521]  eta: 0:02:51  loss: 0.6738 (0.5630)  acc1: 82.2917 (85.9633)  acc5: 95.8333 (97.0297)  time: 0.3032  data: 0.0005  max mem: 822
Test:  [150/521]  eta: 0:02:18  loss: 0.4813 (0.5855)  acc1: 86.4583 (85.1545)  acc5: 97.9167 (97.0751)  time: 0.3038  data: 0.0006  max mem: 822
Test:  [200/521]  eta: 0:01:54  loss: 0.5995 (0.5763)  acc1: 85.4167 (85.3027)  acc5: 96.8750 (97.1808)  time: 0.3038  data: 0.0007  max mem: 822
Test:  [250/521]  eta: 0:01:33  loss: 0.8093 (0.6275)  acc1: 80.2083 (84.0098)  acc5: 92.7083 (96.6592)  time: 0.3032  data: 0.0006  max mem: 822
Test:  [300/521]  eta: 0:01:14  loss: 0.5662 (0.6626)  acc1: 85.4167 (83.2018)  acc5: 94.7917 (96.2209)  time: 0.3041  data: 0.0006  max mem: 822
Test:  [350/521]  eta: 0:00:56  loss: 0.7508 (0.6960)  acc1: 77.0833 (82.3332)  acc5: 95.8333 (95.8719)  time: 0.3040  data: 0.0006  max mem: 822
Test:  [400/521]  eta: 0:00:39  loss: 0.8227 (0.7173)  acc1: 78.1250 (81.8657)  acc5: 93.7500 (95.5918)  time: 0.3037  data: 0.0006  max mem: 822
Test:  [450/521]  eta: 0:00:23  loss: 0.9354 (0.7371)  acc1: 73.9583 (81.2823)  acc5: 93.7500 (95.3737)  time: 0.3035  data: 0.0006  max mem: 822
Test:  [500/521]  eta: 0:00:06  loss: 0.5672 (0.7415)  acc1: 80.2083 (81.1502)  acc5: 97.9167 (95.3489)  time: 0.3042  data: 0.0006  max mem: 822
Test:  [520/521]  eta: 0:00:00  loss: 0.6509 (0.7438)  acc1: 79.1667 (81.0640)  acc5: 96.8750 (95.3360)  time: 0.3183  data: 0.0003  max mem: 822
Test: Total time: 0:02:49 (0.3244 s / it)
* Acc@1 81.064 Acc@5 95.336 loss 0.744
-0.07940740883350372 1.4391889572143555
Accuracy on 50000 test images: 81.1%

$ python main.py --model edgenext_small --weights weights/edgenext_small_usi.pth --data-path imagenet/val --use_amp
Creating model: edgenext_small
dict_keys(['epoch', 'arch', 'state_dict', 'version', 'args', 'metric'])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='edgenext_small', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=True, weights='weights/edgenext_small_usi.pth')
number of params: 5586832
Test:  [  0/521]  eta: 1:21:45  loss: 0.2791 (0.2791)  acc1: 94.7917 (94.7917)  acc5: 97.9167 (97.9167)  time: 9.4154  data: 4.0497  max mem: 534
Test:  [ 50/521]  eta: 0:03:32  loss: 0.4552 (0.5589)  acc1: 89.5833 (85.9886)  acc5: 97.9167 (97.0588)  time: 0.2378  data: 0.0006  max mem: 534
Test:  [100/521]  eta: 0:02:25  loss: 0.6739 (0.5630)  acc1: 82.2917 (85.9736)  acc5: 95.8333 (97.0297)  time: 0.2372  data: 0.0006  max mem: 534
Test:  [150/521]  eta: 0:01:54  loss: 0.4815 (0.5855)  acc1: 86.4583 (85.1614)  acc5: 97.9167 (97.0751)  time: 0.2377  data: 0.0006  max mem: 534
Test:  [200/521]  eta: 0:01:33  loss: 0.5998 (0.5763)  acc1: 85.4167 (85.3130)  acc5: 96.8750 (97.1808)  time: 0.2377  data: 0.0006  max mem: 534
Test:  [250/521]  eta: 0:01:16  loss: 0.8089 (0.6275)  acc1: 80.2083 (84.0264)  acc5: 92.7083 (96.6633)  time: 0.2374  data: 0.0005  max mem: 534
Test:  [300/521]  eta: 0:01:00  loss: 0.5662 (0.6626)  acc1: 85.4167 (83.2122)  acc5: 94.7917 (96.2209)  time: 0.2382  data: 0.0006  max mem: 534
Test:  [350/521]  eta: 0:00:45  loss: 0.7508 (0.6961)  acc1: 77.0833 (82.3421)  acc5: 95.8333 (95.8719)  time: 0.2379  data: 0.0006  max mem: 534
Test:  [400/521]  eta: 0:00:32  loss: 0.8228 (0.7173)  acc1: 78.1250 (81.8734)  acc5: 93.7500 (95.5918)  time: 0.2370  data: 0.0005  max mem: 534
Test:  [450/521]  eta: 0:00:18  loss: 0.9357 (0.7371)  acc1: 73.9583 (81.2893)  acc5: 93.7500 (95.3760)  time: 0.2371  data: 0.0005  max mem: 534
Test:  [500/521]  eta: 0:00:05  loss: 0.5672 (0.7415)  acc1: 80.2083 (81.1523)  acc5: 97.9167 (95.3551)  time: 0.2375  data: 0.0005  max mem: 534
Test:  [520/521]  eta: 0:00:00  loss: 0.6507 (0.7438)  acc1: 79.1667 (81.0660)  acc5: 96.8750 (95.3420)  time: 0.2708  data: 0.0003  max mem: 534
Test: Total time: 0:02:15 (0.2598 s / it)
* Acc@1 81.066 Acc@5 95.342 loss 0.744
-0.07940673828125 1.439453125
Accuracy on 50000 test images: 81.1%

Test: Total time: 0:01:01 (0.0247 s / it)
* Acc@1 80.760 Acc@5 96.160 loss 0.714
0.045581914484500885 1.0367237329483032
Accuracy on 2500 test images: 80.8%

$ python main.py --model EMO_1M --weights weights/EMO_1M.pth --data-path imagenet/val
Creating model: EMO_1M
dict_keys(["..."])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='EMO_1M', model_ema=False, num_workers=10, pin_mem=True, use_amp=False, usi_eval=False, weights='weights/EMO_1M.pth')
number of params: 1361168
Test:  [  0/521]  eta: 1:18:52  loss: 0.6211 (0.6211)  acc1: 88.5417 (88.5417)  acc5: 96.8750 (96.8750)  time: 9.0834  data: 3.2582  max mem: 1276
Test:  [ 50/521]  eta: 0:02:42  loss: 0.6782 (0.9050)  acc1: 83.3333 (78.4926)  acc5: 94.7917 (94.1176)  time: 0.1501  data: 0.0007  max mem: 1276
Test:  [100/521]  eta: 0:01:44  loss: 1.0881 (0.9268)  acc1: 69.7917 (78.3725)  acc5: 92.7083 (94.0182)  time: 0.1488  data: 0.0007  max mem: 1276
Test:  [150/521]  eta: 0:01:19  loss: 0.7869 (0.9344)  acc1: 80.2083 (77.5179)  acc5: 95.8333 (94.3157)  time: 0.1492  data: 0.0007  max mem: 1276
Test:  [200/521]  eta: 0:01:03  loss: 0.8998 (0.9138)  acc1: 77.0833 (78.0317)  acc5: 93.7500 (94.4548)  time: 0.1495  data: 0.0007  max mem: 1276
Test:  [250/521]  eta: 0:00:51  loss: 1.3155 (0.9984)  acc1: 66.6667 (76.1247)  acc5: 86.4583 (93.3142)  time: 0.1481  data: 0.0006  max mem: 1276
Test:  [300/521]  eta: 0:00:40  loss: 0.9723 (1.0652)  acc1: 78.1250 (74.7058)  acc5: 91.6667 (92.3761)  time: 0.1492  data: 0.0007  max mem: 1276
Test:  [350/521]  eta: 0:00:30  loss: 1.4587 (1.1259)  acc1: 65.6250 (73.3321)  acc5: 87.5000 (91.5687)  time: 0.1485  data: 0.0007  max mem: 1276
Test:  [400/521]  eta: 0:00:21  loss: 1.5012 (1.1658)  acc1: 67.7083 (72.5764)  acc5: 85.4167 (91.0147)  time: 0.1488  data: 0.0008  max mem: 1276
Test:  [450/521]  eta: 0:00:12  loss: 1.5996 (1.2072)  acc1: 61.4583 (71.6833)  acc5: 85.4167 (90.4148)  time: 0.1489  data: 0.0007  max mem: 1276
Test:  [500/521]  eta: 0:00:03  loss: 0.9802 (1.2138)  acc1: 72.9167 (71.4779)  acc5: 93.7500 (90.3630)  time: 0.1482  data: 0.0007  max mem: 1276
Test:  [520/521]  eta: 0:00:00  loss: 1.1235 (1.2124)  acc1: 72.9167 (71.4960)  acc5: 91.6667 (90.3800)  time: 0.1881  data: 0.0004  max mem: 1276
Test: Total time: 0:01:28 (0.1696 s / it)
* Acc@1 71.496 Acc@5 90.380 loss 1.212
-0.017940286546945572 1.6038954257965088
Accuracy on 50000 test images: 71.5%

Test: Total time: 0:01:14 (0.0298 s / it)
* Acc@1 70.720 Acc@5 91.560 loss 1.152
-0.01381051167845726 1.1381374597549438
Accuracy on 2500 test images: 70.7%

$ python main.py --model EMO_2M --weights weights/EMO_2M.pth --data-path imagenet/val --use_amp
Creating model: EMO_2M
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='EMO_2M', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/EMO_2M.pth')
number of params: 2377472
Test:  [  0/521]  eta: 1:38:59  loss: 0.4458 (0.4458)  acc1: 91.6667 (91.6667)  acc5: 97.9167 (97.9167)  time: 11.4003  data: 1.6959  max mem: 674
Test:  [ 50/521]  eta: 0:02:57  loss: 0.7168 (0.7741)  acc1: 83.3333 (81.7606)  acc5: 94.7917 (95.3023)  time: 0.1570  data: 0.0007  max mem: 674
Test:  [100/521]  eta: 0:01:47  loss: 0.7530 (0.7918)  acc1: 84.3750 (81.8379)  acc5: 95.8333 (95.1836)  time: 0.1316  data: 0.0009  max mem: 674
Test:  [150/521]  eta: 0:01:19  loss: 0.8157 (0.8080)  acc1: 79.1667 (80.7947)  acc5: 96.8750 (95.4056)  time: 0.1318  data: 0.0008  max mem: 674
Test:  [200/521]  eta: 0:01:02  loss: 0.6939 (0.7905)  acc1: 84.3750 (81.3433)  acc5: 95.8333 (95.5690)  time: 0.1315  data: 0.0009  max mem: 674
Test:  [250/521]  eta: 0:00:49  loss: 1.0731 (0.8678)  acc1: 75.0000 (79.5858)  acc5: 91.6667 (94.6215)  time: 0.1312  data: 0.0008  max mem: 674
Test:  [300/521]  eta: 0:00:38  loss: 1.2125 (0.9278)  acc1: 71.8750 (78.1735)  acc5: 90.6250 (93.9057)  time: 0.1313  data: 0.0008  max mem: 674
Test:  [350/521]  eta: 0:00:28  loss: 1.2858 (0.9817)  acc1: 69.7917 (76.9201)  acc5: 90.6250 (93.1950)  time: 0.1314  data: 0.0007  max mem: 674
Test:  [400/521]  eta: 0:00:19  loss: 1.2406 (1.0177)  acc1: 70.8333 (76.1819)  acc5: 90.6250 (92.7499)  time: 0.1313  data: 0.0007  max mem: 674
Test:  [450/521]  eta: 0:00:11  loss: 1.3448 (1.0560)  acc1: 69.7917 (75.3280)  acc5: 87.5000 (92.2210)  time: 0.1313  data: 0.0007  max mem: 674
Test:  [500/521]  eta: 0:00:03  loss: 1.0265 (1.0617)  acc1: 73.9583 (75.1144)  acc5: 93.7500 (92.1865)  time: 0.1314  data: 0.0010  max mem: 674
Test:  [520/521]  eta: 0:00:00  loss: 0.9412 (1.0605)  acc1: 76.0417 (75.1000)  acc5: 93.7500 (92.2020)  time: 0.1621  data: 0.0008  max mem: 674
Test: Total time: 0:01:22 (0.1587 s / it)
* Acc@1 75.100 Acc@5 92.202 loss 1.061
-0.0238800048828125 1.353515625
Accuracy on 50000 test images: 75.1%

Test: Total time: 0:01:19 (0.0317 s / it)
* Acc@1 74.800 Acc@5 93.440 loss 1.011
0.03818835690617561 0.9670287370681763
Accuracy on 2500 test images: 74.8%

$ python main.py --model EMO_5M --weights weights/EMO_5M.pth --data-path imagenet/val --use_amp
Creating model: EMO_5M
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='EMO_5M', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/EMO_5M.pth')
number of params: 5108848
Test:  [  0/521]  eta: 1:59:21  loss: 0.3629 (0.3629)  acc1: 95.8333 (95.8333)  acc5: 96.8750 (96.8750)  time: 13.7463  data: 2.9767  max mem: 1138
Test:  [ 50/521]  eta: 0:03:29  loss: 0.6324 (0.6700)  acc1: 86.4583 (84.1503)  acc5: 96.8750 (96.3235)  time: 0.1786  data: 0.0007  max mem: 1138
Test:  [100/521]  eta: 0:02:10  loss: 0.6552 (0.6787)  acc1: 86.4583 (84.0862)  acc5: 95.8333 (96.1015)  time: 0.1726  data: 0.0007  max mem: 1138
Test:  [150/521]  eta: 0:01:38  loss: 0.6996 (0.6943)  acc1: 82.2917 (83.3402)  acc5: 96.8750 (96.3576)  time: 0.1728  data: 0.0006  max mem: 1138
Test:  [200/521]  eta: 0:01:17  loss: 0.6414 (0.6833)  acc1: 86.4583 (83.7117)  acc5: 96.8750 (96.4863)  time: 0.1727  data: 0.0006  max mem: 1138
Test:  [250/521]  eta: 0:01:01  loss: 0.9063 (0.7500)  acc1: 77.0833 (82.1008)  acc5: 92.7083 (95.7171)  time: 0.1728  data: 0.0007  max mem: 1138
Test:  [300/521]  eta: 0:00:48  loss: 0.9991 (0.7987)  acc1: 76.0417 (81.0700)  acc5: 92.7083 (95.1758)  time: 0.1731  data: 0.0007  max mem: 1138
Test:  [350/521]  eta: 0:00:36  loss: 1.0030 (0.8449)  acc1: 73.9583 (79.9501)  acc5: 93.7500 (94.6581)  time: 0.1725  data: 0.0006  max mem: 1138
Test:  [400/521]  eta: 0:00:25  loss: 1.0023 (0.8723)  acc1: 76.0417 (79.3849)  acc5: 92.7083 (94.3553)  time: 0.1729  data: 0.0007  max mem: 1138
Test:  [450/521]  eta: 0:00:14  loss: 1.1467 (0.9025)  acc1: 72.9167 (78.6539)  acc5: 90.6250 (93.9948)  time: 0.1729  data: 0.0007  max mem: 1138
Test:  [500/521]  eta: 0:00:04  loss: 0.9116 (0.9078)  acc1: 78.1250 (78.4909)  acc5: 94.7917 (93.9538)  time: 0.1729  data: 0.0006  max mem: 1138
Test:  [520/521]  eta: 0:00:00  loss: 0.7717 (0.9086)  acc1: 78.1250 (78.4180)  acc5: 95.8333 (93.9680)  time: 0.2179  data: 0.0005  max mem: 1138
Test: Total time: 0:01:46 (0.2039 s / it)
* Acc@1 78.418 Acc@5 93.968 loss 0.909
0.00159454345703125 1.2265625
Accuracy on 50000 test images: 78.4%

Test: Total time: 0:01:18 (0.0313 s / it)
* Acc@1 78.240 Acc@5 95.080 loss 0.856
0.024814579635858536 0.805742084980011
Accuracy on 2500 test images: 78.2%

$ python main.py --model EMO_6M --weights weights/EMO_6M.pth --data-path imagenet/val --use_amp
Creating model: EMO_6M
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='EMO_6M', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/EMO_6M.pth')
number of params: 6168496
Test:  [  0/521]  eta: 1:58:14  loss: 0.3420 (0.3420)  acc1: 96.8750 (96.8750)  acc5: 98.9583 (98.9583)  time: 13.6168  data: 6.6035  max mem: 1142
Test:  [ 50/521]  eta: 0:03:32  loss: 0.5554 (0.6625)  acc1: 87.5000 (84.1299)  acc5: 96.8750 (96.3644)  time: 0.1882  data: 0.0006  max mem: 1142
Test:  [100/521]  eta: 0:02:13  loss: 0.6465 (0.6614)  acc1: 86.4583 (84.6225)  acc5: 96.8750 (96.3903)  time: 0.1796  data: 0.0007  max mem: 1142
Test:  [150/521]  eta: 0:01:40  loss: 0.6524 (0.6748)  acc1: 82.2917 (83.7748)  acc5: 97.9167 (96.6267)  time: 0.1805  data: 0.0007  max mem: 1142
Test:  [200/521]  eta: 0:01:19  loss: 0.6001 (0.6641)  acc1: 86.4583 (84.2247)  acc5: 96.8750 (96.7558)  time: 0.1804  data: 0.0007  max mem: 1142
Test:  [250/521]  eta: 0:01:03  loss: 0.9167 (0.7299)  acc1: 78.1250 (82.7731)  acc5: 93.7500 (95.9329)  time: 0.1799  data: 0.0006  max mem: 1142
Test:  [300/521]  eta: 0:00:49  loss: 1.0364 (0.7803)  acc1: 76.0417 (81.5961)  acc5: 92.7083 (95.4077)  time: 0.1800  data: 0.0007  max mem: 1142
Test:  [350/521]  eta: 0:00:37  loss: 1.0210 (0.8262)  acc1: 76.0417 (80.5823)  acc5: 92.7083 (94.9015)  time: 0.1808  data: 0.0009  max mem: 1142
Test:  [400/521]  eta: 0:00:25  loss: 1.0124 (0.8566)  acc1: 78.1250 (79.9953)  acc5: 91.6667 (94.5579)  time: 0.1805  data: 0.0007  max mem: 1142
Test:  [450/521]  eta: 0:00:14  loss: 1.1622 (0.8887)  acc1: 75.0000 (79.2614)  acc5: 91.6667 (94.1426)  time: 0.1796  data: 0.0007  max mem: 1142
Test:  [500/521]  eta: 0:00:04  loss: 0.8418 (0.8927)  acc1: 78.1250 (79.0544)  acc5: 95.8333 (94.1201)  time: 0.1804  data: 0.0007  max mem: 1142
Test:  [520/521]  eta: 0:00:00  loss: 0.8390 (0.8936)  acc1: 79.1667 (78.9900)  acc5: 95.8333 (94.1500)  time: 0.2269  data: 0.0005  max mem: 1142
Test: Total time: 0:01:50 (0.2114 s / it)
* Acc@1 78.990 Acc@5 94.150 loss 0.894
-0.015625 1.2548828125
Accuracy on 50000 test images: 79.0%

Test: Total time: 0:01:23 (0.0335 s / it)
* Acc@1 79.200 Acc@5 95.400 loss 0.834
-0.0071878875605762005 0.7704285383224487
Accuracy on 2500 test images: 79.2%

$ python main.py --model SwiftFormer_XS --weights weights/SwiftFormer_XS_ckpt.pth --data-path imagenet/val
Creating model: SwiftFormer_XS
dict_keys(["..."])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='SwiftFormer_XS', model_ema=False, num_workers=10, pin_mem=True, use_amp=False, usi_eval=False, weights='weights/SwiftFormer_XS_ckpt.pth')
number of params: 3475360
Test:  [  0/521]  eta: 0:43:10  loss: 0.3509 (0.3509)  acc1: 93.7500 (93.7500)  acc5: 97.9167 (97.9167)  time: 4.9713  data: 1.1696  max mem: 694
Test:  [ 50/521]  eta: 0:01:57  loss: 0.5299 (0.7502)  acc1: 86.4583 (81.7810)  acc5: 95.8333 (95.0163)  time: 0.1436  data: 0.0009  max mem: 694
Test:  [100/521]  eta: 0:01:22  loss: 0.8688 (0.7420)  acc1: 75.0000 (81.5697)  acc5: 94.7917 (94.9979)  time: 0.1405  data: 0.0013  max mem: 694
Test:  [150/521]  eta: 0:01:05  loss: 0.6283 (0.7535)  acc1: 82.2917 (80.8430)  acc5: 96.8750 (95.4194)  time: 0.1409  data: 0.0010  max mem: 694
Test:  [200/521]  eta: 0:00:54  loss: 0.7452 (0.7439)  acc1: 81.2500 (81.3277)  acc5: 93.7500 (95.5172)  time: 0.1406  data: 0.0009  max mem: 694
Test:  [250/521]  eta: 0:00:44  loss: 1.1003 (0.8208)  acc1: 69.7917 (79.5568)  acc5: 89.5833 (94.6381)  time: 0.1410  data: 0.0012  max mem: 694
Test:  [300/521]  eta: 0:00:35  loss: 0.8745 (0.8783)  acc1: 80.2083 (78.3084)  acc5: 92.7083 (93.9923)  time: 0.1402  data: 0.0007  max mem: 694
Test:  [350/521]  eta: 0:00:26  loss: 1.1610 (0.9290)  acc1: 72.9167 (77.2109)  acc5: 91.6667 (93.3464)  time: 0.1405  data: 0.0008  max mem: 694
Test:  [400/521]  eta: 0:00:18  loss: 1.1644 (0.9610)  acc1: 71.8750 (76.6495)  acc5: 88.5417 (92.8720)  time: 0.1409  data: 0.0010  max mem: 694
Test:  [450/521]  eta: 0:00:10  loss: 1.2590 (0.9972)  acc1: 68.7500 (75.8523)  acc5: 89.5833 (92.3965)  time: 0.1406  data: 0.0008  max mem: 694
Test:  [500/521]  eta: 0:00:03  loss: 0.8175 (1.0014)  acc1: 78.1250 (75.6757)  acc5: 94.7917 (92.4110)  time: 0.1405  data: 0.0009  max mem: 694
Test:  [520/521]  eta: 0:00:00  loss: 0.8839 (1.0023)  acc1: 73.9583 (75.6700)  acc5: 94.7917 (92.4100)  time: 0.1672  data: 0.0004  max mem: 694
Test: Total time: 0:01:19 (0.1524 s / it)
* Acc@1 75.670 Acc@5 92.410 loss 1.002
-0.552879273891449 2.2997379302978516
Accuracy on 50000 test images: 75.7%

Test: Total time: 0:00:56 (0.0225 s / it)
* Acc@1 76.120 Acc@5 93.320 loss 0.934
-0.20546241104602814 1.5580304861068726
Accuracy on 2500 test images: 76.1%

$ python main.py --model SwiftFormer_S --weights weights/SwiftFormer_S_ckpt.pth --data-path imagenet/val --use_amp
Creating model: SwiftFormer_S
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='SwiftFormer_S', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/SwiftFormer_S_ckpt.pth')
number of params: 6092128
Test:  [  0/521]  eta: 1:28:56  loss: 0.3760 (0.3760)  acc1: 90.6250 (90.6250)  acc5: 97.9167 (97.9167)  time: 10.2437  data: 1.3897  max mem: 549
Test:  [ 50/521]  eta: 0:02:49  loss: 0.5343 (0.6167)  acc1: 86.4583 (84.3342)  acc5: 96.8750 (96.5482)  time: 0.1612  data: 0.0008  max mem: 549
Test:  [100/521]  eta: 0:01:45  loss: 0.5917 (0.6321)  acc1: 85.4167 (84.2409)  acc5: 95.8333 (96.2768)  time: 0.1423  data: 0.0007  max mem: 549
Test:  [150/521]  eta: 0:01:19  loss: 0.6252 (0.6546)  acc1: 83.3333 (83.1333)  acc5: 97.9167 (96.4542)  time: 0.1422  data: 0.0007  max mem: 549
Test:  [200/521]  eta: 0:01:03  loss: 0.5491 (0.6469)  acc1: 86.4583 (83.5095)  acc5: 96.8750 (96.5796)  time: 0.1424  data: 0.0006  max mem: 549
Test:  [250/521]  eta: 0:00:50  loss: 0.8368 (0.7041)  acc1: 78.1250 (82.1630)  acc5: 93.7500 (95.8748)  time: 0.1424  data: 0.0007  max mem: 549
Test:  [300/521]  eta: 0:00:39  loss: 0.9970 (0.7546)  acc1: 76.0417 (80.9835)  acc5: 92.7083 (95.2900)  time: 0.1425  data: 0.0007  max mem: 549
Test:  [350/521]  eta: 0:00:29  loss: 0.9160 (0.7965)  acc1: 75.0000 (79.9056)  acc5: 93.7500 (94.8688)  time: 0.1421  data: 0.0007  max mem: 549
Test:  [400/521]  eta: 0:00:20  loss: 1.0178 (0.8226)  acc1: 77.0833 (79.3979)  acc5: 91.6667 (94.5033)  time: 0.1425  data: 0.0008  max mem: 549
Test:  [450/521]  eta: 0:00:11  loss: 1.0413 (0.8516)  acc1: 75.0000 (78.7001)  acc5: 91.6667 (94.1657)  time: 0.1421  data: 0.0007  max mem: 549
Test:  [500/521]  eta: 0:00:03  loss: 0.8230 (0.8564)  acc1: 78.1250 (78.5492)  acc5: 94.7917 (94.1388)  time: 0.1422  data: 0.0007  max mem: 549
Test:  [520/521]  eta: 0:00:00  loss: 0.7479 (0.8580)  acc1: 78.1250 (78.4840)  acc5: 95.8333 (94.1480)  time: 0.1608  data: 0.0005  max mem: 549
Test: Total time: 0:01:26 (0.1655 s / it)
* Acc@1 78.484 Acc@5 94.148 loss 0.858
-0.1083984375 1.5107421875
Accuracy on 50000 test images: 78.5%

Test: Total time: 0:01:07 (0.0269 s / it)
* Acc@1 78.320 Acc@5 95.440 loss 0.827
0.12073566764593124 1.35704505443573
Accuracy on 2500 test images: 78.3%

$ python main.py --model SwiftFormer_L1 --weights weights/SwiftFormer_L1_ckpt.pth --data-path imagenet/val --use_amp
Creating model: SwiftFormer_L1
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='SwiftFormer_L1', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/SwiftFormer_L1_ckpt.pth')
number of params: 12057920
Test:  [  0/521]  eta: 1:10:35  loss: 0.3395 (0.3395)  acc1: 91.6667 (91.6667)  acc5: 97.9167 (97.9167)  time: 8.1288  data: 3.1335  max mem: 476
Test:  [ 50/521]  eta: 0:02:43  loss: 0.4238 (0.5602)  acc1: 88.5417 (85.9886)  acc5: 97.9167 (97.2835)  time: 0.1920  data: 0.0006  max mem: 476
Test:  [100/521]  eta: 0:01:51  loss: 0.5394 (0.5648)  acc1: 87.5000 (86.0149)  acc5: 96.8750 (97.0710)  time: 0.1797  data: 0.0006  max mem: 476
Test:  [150/521]  eta: 0:01:27  loss: 0.5735 (0.5888)  acc1: 84.3750 (85.0924)  acc5: 97.9167 (97.2061)  time: 0.1798  data: 0.0006  max mem: 476
Test:  [200/521]  eta: 0:01:11  loss: 0.5228 (0.5849)  acc1: 87.5000 (85.3493)  acc5: 96.8750 (97.2067)  time: 0.1797  data: 0.0006  max mem: 476
Test:  [250/521]  eta: 0:00:57  loss: 0.7486 (0.6378)  acc1: 81.2500 (83.9932)  acc5: 94.7917 (96.6177)  time: 0.1795  data: 0.0006  max mem: 476
Test:  [300/521]  eta: 0:00:45  loss: 0.9311 (0.6789)  acc1: 79.1667 (82.9907)  acc5: 93.7500 (96.1483)  time: 0.1797  data: 0.0006  max mem: 476
Test:  [350/521]  eta: 0:00:34  loss: 0.8076 (0.7121)  acc1: 79.1667 (82.1166)  acc5: 94.7917 (95.8452)  time: 0.1793  data: 0.0006  max mem: 476
Test:  [400/521]  eta: 0:00:24  loss: 0.8237 (0.7316)  acc1: 80.2083 (81.6994)  acc5: 94.7917 (95.6489)  time: 0.1799  data: 0.0007  max mem: 476
Test:  [450/521]  eta: 0:00:14  loss: 0.8467 (0.7535)  acc1: 78.1250 (81.1461)  acc5: 94.7917 (95.4130)  time: 0.1795  data: 0.0006  max mem: 476
Test:  [500/521]  eta: 0:00:04  loss: 0.7358 (0.7577)  acc1: 80.2083 (81.0026)  acc5: 95.8333 (95.4009)  time: 0.1796  data: 0.0006  max mem: 476
Test:  [520/521]  eta: 0:00:00  loss: 0.7188 (0.7597)  acc1: 80.2083 (80.8960)  acc5: 96.8750 (95.3980)  time: 0.1999  data: 0.0005  max mem: 505
Test: Total time: 0:01:43 (0.1983 s / it)
* Acc@1 80.896 Acc@5 95.398 loss 0.760
-0.1121826171875 1.373046875
Accuracy on 50000 test images: 80.9%

Test: Total time: 0:01:06 (0.0265 s / it)
* Acc@1 80.680 Acc@5 96.280 loss 0.745
0.158054918050766 1.2843574285507202
Accuracy on 2500 test images: 80.7%

$ python main.py --model mobilevit_xx_small --weights weights/mobilevit_xxs.pt --data-path imagenet/val
Creating model: mobilevit_xx_small
dict_keys(["..."])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='mobilevit_xx_small', model_ema=False, num_workers=10, pin_mem=True, use_amp=False, usi_eval=False, weights='weights/mobilevit_xxs.pt')
number of params: 1272024
Test:  [  0/521]  eta: 1:33:06  loss: 0.7593 (0.7593)  acc1: 86.4583 (86.4583)  acc5: 93.7500 (93.7500)  time: 10.7221  data: 5.2453  max mem: 1099
Test:  [ 50/521]  eta: 0:03:12  loss: 0.7671 (0.9750)  acc1: 82.2917 (77.1650)  acc5: 93.7500 (93.1168)  time: 0.1765  data: 0.0008  max mem: 1099
Test:  [100/521]  eta: 0:02:03  loss: 1.1198 (0.9926)  acc1: 67.7083 (76.2479)  acc5: 91.6667 (93.2343)  time: 0.1748  data: 0.0009  max mem: 1099
Test:  [150/521]  eta: 0:01:34  loss: 0.8708 (0.9856)  acc1: 78.1250 (75.9313)  acc5: 95.8333 (93.8742)  time: 0.1759  data: 0.0010  max mem: 1099
Test:  [200/521]  eta: 0:01:15  loss: 0.9544 (0.9709)  acc1: 77.0833 (76.5755)  acc5: 92.7083 (93.9677)  time: 0.1751  data: 0.0007  max mem: 1099
Test:  [250/521]  eta: 0:01:00  loss: 1.5784 (1.0802)  acc1: 64.5833 (74.2986)  acc5: 83.3333 (92.4137)  time: 0.1739  data: 0.0008  max mem: 1099
Test:  [300/521]  eta: 0:00:47  loss: 1.1188 (1.1583)  acc1: 70.8333 (72.6537)  acc5: 90.6250 (91.3483)  time: 0.1759  data: 0.0008  max mem: 1099
Test:  [350/521]  eta: 0:00:35  loss: 1.6459 (1.2270)  acc1: 61.4583 (71.1034)  acc5: 87.5000 (90.3995)  time: 0.1743  data: 0.0010  max mem: 1099
Test:  [400/521]  eta: 0:00:24  loss: 1.6569 (1.2792)  acc1: 63.5417 (70.0644)  acc5: 83.3333 (89.6769)  time: 0.1746  data: 0.0010  max mem: 1099
Test:  [450/521]  eta: 0:00:14  loss: 1.7264 (1.3270)  acc1: 58.3333 (69.0780)  acc5: 81.2500 (89.0128)  time: 0.1740  data: 0.0008  max mem: 1099
Test:  [500/521]  eta: 0:00:04  loss: 1.0376 (1.3363)  acc1: 75.0000 (68.8748)  acc5: 93.7500 (88.9159)  time: 0.1745  data: 0.0011  max mem: 1099
Test:  [520/521]  eta: 0:00:00  loss: 1.1657 (1.3345)  acc1: 67.7083 (68.8940)  acc5: 90.6250 (88.9500)  time: 0.2079  data: 0.0004  max mem: 1099
Test: Total time: 0:01:43 (0.1991 s / it)
* Acc@1 68.894 Acc@5 88.950 loss 1.334
-1.0025981664657593 2.195483922958374
Accuracy on 50000 test images: 68.9%

$ python main.py --model mobilevit_xx_small --weights weights/mobilevit_xxs.pt --data-path imagenet/val --use_amp
Creating model: mobilevit_xx_small
dict_keys(["..."])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='mobilevit_xx_small', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/mobilevit_xxs.pt')
number of params: 1272024
Test:  [  0/521]  eta: 1:31:57  loss: 0.7600 (0.7600)  acc1: 86.4583 (86.4583)  acc5: 93.7500 (93.7500)  time: 10.5911  data: 1.2783  max mem: 1085
Test:  [ 50/521]  eta: 0:02:33  loss: 0.7676 (0.9755)  acc1: 82.2917 (77.1446)  acc5: 93.7500 (93.0760)  time: 0.1172  data: 0.0007  max mem: 1085
Test:  [100/521]  eta: 0:01:33  loss: 1.1192 (0.9928)  acc1: 67.7083 (76.2273)  acc5: 91.6667 (93.2137)  time: 0.1145  data: 0.0006  max mem: 1085
Test:  [150/521]  eta: 0:01:09  loss: 0.8708 (0.9858)  acc1: 78.1250 (75.9313)  acc5: 95.8333 (93.8466)  time: 0.1152  data: 0.0008  max mem: 1085
Test:  [200/521]  eta: 0:00:54  loss: 0.9538 (0.9711)  acc1: 77.0833 (76.5806)  acc5: 92.7083 (93.9418)  time: 0.1156  data: 0.0007  max mem: 1085
Test:  [250/521]  eta: 0:00:42  loss: 1.5786 (1.0804)  acc1: 64.5833 (74.3069)  acc5: 83.3333 (92.3929)  time: 0.1144  data: 0.0007  max mem: 1085
Test:  [300/521]  eta: 0:00:33  loss: 1.1200 (1.1585)  acc1: 70.8333 (72.6640)  acc5: 90.6250 (91.3206)  time: 0.1166  data: 0.0010  max mem: 1085
Test:  [350/521]  eta: 0:00:24  loss: 1.6458 (1.2271)  acc1: 61.4583 (71.1093)  acc5: 87.5000 (90.3817)  time: 0.1157  data: 0.0007  max mem: 1085
Test:  [400/521]  eta: 0:00:17  loss: 1.6553 (1.2793)  acc1: 63.5417 (70.0722)  acc5: 83.3333 (89.6613)  time: 0.1151  data: 0.0009  max mem: 1085
Test:  [450/521]  eta: 0:00:09  loss: 1.7275 (1.3270)  acc1: 58.3333 (69.0849)  acc5: 80.2083 (88.9967)  time: 0.1142  data: 0.0010  max mem: 1085
Test:  [500/521]  eta: 0:00:02  loss: 1.0406 (1.3365)  acc1: 75.0000 (68.8810)  acc5: 93.7500 (88.9014)  time: 0.1150  data: 0.0010  max mem: 1085
Test:  [520/521]  eta: 0:00:00  loss: 1.1681 (1.3346)  acc1: 67.7083 (68.8980)  acc5: 90.6250 (88.9320)  time: 0.1987  data: 0.0003  max mem: 1085
Test: Total time: 0:01:12 (0.1391 s / it)
* Acc@1 68.898 Acc@5 88.932 loss 1.335
-1.0009765625 2.1953125
Accuracy on 50000 test images: 68.9%

Test: Total time: 0:01:06 (0.0264 s / it)
* Acc@1 68.920 Acc@5 90.320 loss 1.258
1.8197671175003052 1.3262444734573364
Accuracy on 2500 test images: 68.9%

$ python main.py --model mobilevit_small --weights weights/mobilevit_s.pt --data-path imagenet/val --use_amp
Creating model: mobilevit_small
dict_keys(["..."])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='mobilevit_small', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/mobilevit_s.pt')
number of params: 5578632
Test:  [  0/521]  eta: 2:01:51  loss: 0.4542 (0.4542)  acc1: 93.7500 (93.7500)  acc5: 97.9167 (97.9167)  time: 14.0328  data: 1.3104  max mem: 2158
Test:  [ 50/521]  eta: 0:04:03  loss: 0.5422 (0.6573)  acc1: 86.4583 (83.8848)  acc5: 96.8750 (96.5891)  time: 0.2444  data: 0.0007  max mem: 2158
Test:  [100/521]  eta: 0:02:40  loss: 0.7774 (0.6572)  acc1: 79.1667 (84.3956)  acc5: 95.8333 (96.5759)  time: 0.2441  data: 0.0007  max mem: 2158
Test:  [150/521]  eta: 0:02:04  loss: 0.5796 (0.6764)  acc1: 85.4167 (83.5265)  acc5: 97.9167 (96.7094)  time: 0.2447  data: 0.0006  max mem: 2158
Test:  [200/521]  eta: 0:01:40  loss: 0.7115 (0.6682)  acc1: 82.2917 (83.9086)  acc5: 95.8333 (96.7714)  time: 0.2452  data: 0.0008  max mem: 2158
Test:  [250/521]  eta: 0:01:21  loss: 1.1599 (0.7422)  acc1: 75.0000 (82.0800)  acc5: 92.7083 (95.9952)  time: 0.2440  data: 0.0007  max mem: 2158
Test:  [300/521]  eta: 0:01:04  loss: 0.7424 (0.7950)  acc1: 83.3333 (80.9212)  acc5: 94.7917 (95.4215)  time: 0.2458  data: 0.0006  max mem: 2158
Test:  [350/521]  eta: 0:00:48  loss: 1.1482 (0.8423)  acc1: 73.9583 (79.8225)  acc5: 92.7083 (94.8807)  time: 0.2447  data: 0.0006  max mem: 2158
Test:  [400/521]  eta: 0:00:33  loss: 1.0410 (0.8748)  acc1: 75.0000 (79.1719)  acc5: 91.6667 (94.4955)  time: 0.2444  data: 0.0007  max mem: 2158
Test:  [450/521]  eta: 0:00:19  loss: 1.2329 (0.9054)  acc1: 70.8333 (78.4507)  acc5: 90.6250 (94.1519)  time: 0.2448  data: 0.0007  max mem: 2158
Test:  [500/521]  eta: 0:00:05  loss: 0.7568 (0.9134)  acc1: 79.1667 (78.2622)  acc5: 96.8750 (94.1243)  time: 0.2443  data: 0.0007  max mem: 2158
Test:  [520/521]  eta: 0:00:00  loss: 0.8893 (0.9146)  acc1: 75.0000 (78.2180)  acc5: 94.7917 (94.1220)  time: 0.4650  data: 0.0003  max mem: 2158
Test: Total time: 0:02:25 (0.2799 s / it)
* Acc@1 78.218 Acc@5 94.122 loss 0.915
0.290283203125 2.208984375
Accuracy on 50000 test images: 78.2%

Test: Total time: 0:01:11 (0.0285 s / it)
* Acc@1 77.680 Acc@5 95.040 loss 0.875
1.9823880195617676 0.9444427490234375
Accuracy on 2500 test images: 77.7%

$ python main.py --model mobilevit_x_small --weights weights/mobilevit_xs.pt --data-path imagenet/val --use_amp
Creating model: mobilevit_x_small
dict_keys(["..."])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='mobilevit_x_small', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/mobilevit_xs.pt')
number of params: 2317848
Test:  [  0/521]  eta: 2:23:06  loss: 0.4460 (0.4460)  acc1: 91.6667 (91.6667)  acc5: 98.9583 (98.9583)  time: 16.4804  data: 4.1790  max mem: 2049
Test:  [ 50/521]  eta: 0:04:02  loss: 0.5625 (0.7446)  acc1: 85.4167 (81.6381)  acc5: 95.8333 (95.5882)  time: 0.1914  data: 0.0006  max mem: 2049
Test:  [100/521]  eta: 0:02:29  loss: 0.8784 (0.7578)  acc1: 76.0417 (81.4253)  acc5: 94.7917 (95.4827)  time: 0.1915  data: 0.0008  max mem: 2049
Test:  [150/521]  eta: 0:01:51  loss: 0.6567 (0.7636)  acc1: 83.3333 (81.1120)  acc5: 96.8750 (95.7299)  time: 0.1918  data: 0.0007  max mem: 2049
Test:  [200/521]  eta: 0:01:27  loss: 0.7579 (0.7496)  acc1: 81.2500 (81.5972)  acc5: 95.8333 (95.9163)  time: 0.1926  data: 0.0007  max mem: 2049
Test:  [250/521]  eta: 0:01:09  loss: 1.2193 (0.8402)  acc1: 70.8333 (79.5319)  acc5: 88.5417 (94.7626)  time: 0.1921  data: 0.0007  max mem: 2049
Test:  [300/521]  eta: 0:00:54  loss: 0.8465 (0.9050)  acc1: 75.0000 (78.0039)  acc5: 91.6667 (94.0026)  time: 0.1919  data: 0.0007  max mem: 2049
Test:  [350/521]  eta: 0:00:40  loss: 1.2524 (0.9581)  acc1: 69.7917 (76.6886)  acc5: 90.6250 (93.4028)  time: 0.1918  data: 0.0007  max mem: 2049
Test:  [400/521]  eta: 0:00:28  loss: 1.2724 (0.9980)  acc1: 70.8333 (75.8313)  acc5: 87.5000 (92.8408)  time: 0.1913  data: 0.0007  max mem: 2049
Test:  [450/521]  eta: 0:00:16  loss: 1.2954 (1.0368)  acc1: 66.6667 (74.9931)  acc5: 88.5417 (92.3642)  time: 0.1917  data: 0.0006  max mem: 2049
Test:  [500/521]  eta: 0:00:04  loss: 0.8470 (1.0463)  acc1: 78.1250 (74.7193)  acc5: 94.7917 (92.2676)  time: 0.1916  data: 0.0006  max mem: 2049
Test:  [520/521]  eta: 0:00:00  loss: 0.9579 (1.0472)  acc1: 71.8750 (74.6600)  acc5: 93.7500 (92.2900)  time: 0.3700  data: 0.0003  max mem: 2049
Test: Total time: 0:02:00 (0.2306 s / it)
* Acc@1 74.660 Acc@5 92.290 loss 1.047
-0.6796875 2.41015625
Accuracy on 50000 test images: 74.7%

Test: Total time: 0:01:11 (0.0285 s / it)
* Acc@1 74.280 Acc@5 93.680 loss 0.987
3.2880148887634277 0.9257345199584961
Accuracy on 2500 test images: 74.3%

$ python main.py --model mobilevitv2_050 --weights weights/mobilevitv2-0.5.pt --data-path imagenet/val --use_amp
Creating model: mobilevitv2_050
dict_keys(["..."])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='mobilevitv2_050', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/mobilevitv2-0.5.pt')
number of params: 1370593
Test:  [  0/521]  eta: 1:52:24  loss: 0.6696 (0.6696)  acc1: 87.5000 (87.5000)  acc5: 96.8750 (96.8750)  time: 12.9458  data: 4.4863  max mem: 1181
Test:  [ 50/521]  eta: 0:02:50  loss: 0.8161 (0.9950)  acc1: 84.3750 (78.4926)  acc5: 94.7917 (93.9951)  time: 0.1098  data: 0.0008  max mem: 1181
Test:  [100/521]  eta: 0:01:39  loss: 1.1482 (1.0289)  acc1: 67.7083 (77.6815)  acc5: 92.7083 (93.7603)  time: 0.1073  data: 0.0009  max mem: 1181
Test:  [150/521]  eta: 0:01:11  loss: 0.8630 (1.0384)  acc1: 78.1250 (77.0557)  acc5: 96.8750 (94.2191)  time: 0.1080  data: 0.0008  max mem: 1181
Test:  [200/521]  eta: 0:00:55  loss: 1.0125 (1.0219)  acc1: 77.0833 (77.4772)  acc5: 93.7500 (94.3097)  time: 0.1079  data: 0.0007  max mem: 1181
Test:  [250/521]  eta: 0:00:43  loss: 1.5973 (1.1168)  acc1: 63.5417 (75.2075)  acc5: 86.4583 (92.9656)  time: 0.1080  data: 0.0012  max mem: 1181
Test:  [300/521]  eta: 0:00:33  loss: 1.1176 (1.1813)  acc1: 76.0417 (73.7542)  acc5: 91.6667 (92.0854)  time: 0.1078  data: 0.0007  max mem: 1181
Test:  [350/521]  eta: 0:00:24  loss: 1.6992 (1.2465)  acc1: 63.5417 (72.1985)  acc5: 88.5417 (91.2126)  time: 0.1072  data: 0.0006  max mem: 1181
Test:  [400/521]  eta: 0:00:16  loss: 1.6364 (1.2916)  acc1: 62.5000 (71.2360)  acc5: 85.4167 (90.5289)  time: 0.1074  data: 0.0007  max mem: 1181
Test:  [450/521]  eta: 0:00:09  loss: 1.7635 (1.3350)  acc1: 60.4167 (70.2906)  acc5: 84.3750 (89.8905)  time: 0.1081  data: 0.0008  max mem: 1181
Test:  [500/521]  eta: 0:00:02  loss: 1.0603 (1.3389)  acc1: 73.9583 (70.1347)  acc5: 94.7917 (89.9202)  time: 0.1076  data: 0.0009  max mem: 1181
Test:  [520/521]  eta: 0:00:00  loss: 1.2683 (1.3364)  acc1: 68.7500 (70.1760)  acc5: 92.7083 (89.9380)  time: 0.2361  data: 0.0004  max mem: 1181
Test: Total time: 0:01:11 (0.1376 s / it)
* Acc@1 70.176 Acc@5 89.938 loss 1.336
-0.607421875 1.443359375
Accuracy on 50000 test images: 70.2%

Test: Total time: 0:00:58 (0.0232 s / it)
* Acc@1 69.920 Acc@5 91.160 loss 1.269
-0.5372492074966431 0.9743440747261047
Accuracy on 2500 test images: 69.9%

$ python main.py --model mobilevitv2_075 --weights weights/mobilevitv2-0.75.pt --data-path imagenet/val --use_amp
Creating model: mobilevitv2_075
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='mobilevitv2_075', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/mobilevitv2-0.75.pt')
number of params: 2866009
Test:  [  0/521]  eta: 1:37:10  loss: 0.5231 (0.5231)  acc1: 91.6667 (91.6667)  acc5: 97.9167 (97.9167)  time: 11.1903  data: 1.4625  max mem: 1739
Test:  [ 50/521]  eta: 0:02:56  loss: 0.7238 (0.8059)  acc1: 85.4167 (82.3121)  acc5: 95.8333 (95.6291)  time: 0.1582  data: 0.0009  max mem: 1739
Test:  [100/521]  eta: 0:01:52  loss: 0.8214 (0.8319)  acc1: 82.2917 (81.6832)  acc5: 95.8333 (95.4414)  time: 0.1564  data: 0.0008  max mem: 1739
Test:  [150/521]  eta: 0:01:25  loss: 0.8962 (0.8529)  acc1: 81.2500 (81.0430)  acc5: 96.8750 (95.6816)  time: 0.1568  data: 0.0008  max mem: 1739
Test:  [200/521]  eta: 0:01:07  loss: 0.7374 (0.8382)  acc1: 84.3750 (81.5869)  acc5: 96.8750 (95.7608)  time: 0.1561  data: 0.0008  max mem: 1739
Test:  [250/521]  eta: 0:00:54  loss: 1.1249 (0.9086)  acc1: 73.9583 (79.7933)  acc5: 91.6667 (94.8207)  time: 0.1564  data: 0.0009  max mem: 1739
Test:  [300/521]  eta: 0:00:42  loss: 1.1379 (0.9625)  acc1: 73.9583 (78.5645)  acc5: 92.7083 (94.1999)  time: 0.1566  data: 0.0008  max mem: 1739
Test:  [350/521]  eta: 0:00:32  loss: 1.2279 (1.0140)  acc1: 72.9167 (77.3890)  acc5: 90.6250 (93.5423)  time: 0.1563  data: 0.0008  max mem: 1739
Test:  [400/521]  eta: 0:00:22  loss: 1.2646 (1.0492)  acc1: 71.8750 (76.5846)  acc5: 90.6250 (93.1214)  time: 0.1561  data: 0.0008  max mem: 1739
Test:  [450/521]  eta: 0:00:12  loss: 1.3845 (1.0837)  acc1: 67.7083 (75.7530)  acc5: 88.5417 (92.7314)  time: 0.1561  data: 0.0008  max mem: 1739
Test:  [500/521]  eta: 0:00:03  loss: 1.0389 (1.0868)  acc1: 77.0833 (75.6217)  acc5: 93.7500 (92.7416)  time: 0.1562  data: 0.0008  max mem: 1739
Test:  [520/521]  eta: 0:00:00  loss: 0.9773 (1.0866)  acc1: 79.1667 (75.5880)  acc5: 94.7917 (92.7520)  time: 0.2247  data: 0.0006  max mem: 1739
Test: Total time: 0:01:36 (0.1845 s / it)
* Acc@1 75.588 Acc@5 92.752 loss 1.087
-0.51416015625 1.24609375
Accuracy on 50000 test images: 75.6%

Test: Total time: 0:00:57 (0.0230 s / it)
* Acc@1 75.040 Acc@5 93.600 loss 1.040
-0.5337702631950378 0.8522542715072632
Accuracy on 2500 test images: 75.0%

$ python main.py --model mobilevitv2_100 --weights weights/mobilevitv2-1.0.pt --data-path imagenet/val --use_amp
Creating model: mobilevitv2_100
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='mobilevitv2_100', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/mobilevitv2-1.0.pt')
number of params: 4901841
Test:  [  0/521]  eta: 2:11:10  loss: 0.3824 (0.3824)  acc1: 95.8333 (95.8333)  acc5: 98.9583 (98.9583)  time: 15.1073  data: 3.4949  max mem: 2299
Test:  [ 50/521]  eta: 0:03:53  loss: 0.6247 (0.7095)  acc1: 86.4583 (83.9665)  acc5: 96.8750 (96.6912)  time: 0.2027  data: 0.0007  max mem: 2299
Test:  [100/521]  eta: 0:02:27  loss: 0.7327 (0.7343)  acc1: 85.4167 (83.8800)  acc5: 96.8750 (96.5140)  time: 0.2016  data: 0.0007  max mem: 2299
Test:  [150/521]  eta: 0:01:51  loss: 0.7759 (0.7586)  acc1: 83.3333 (83.0022)  acc5: 96.8750 (96.6198)  time: 0.2020  data: 0.0007  max mem: 2299
Test:  [200/521]  eta: 0:01:28  loss: 0.6875 (0.7501)  acc1: 85.4167 (83.3126)  acc5: 96.8750 (96.6625)  time: 0.2022  data: 0.0008  max mem: 2299
Test:  [250/521]  eta: 0:01:10  loss: 0.9875 (0.8139)  acc1: 77.0833 (81.7978)  acc5: 93.7500 (95.9537)  time: 0.2016  data: 0.0007  max mem: 2299
Test:  [300/521]  eta: 0:00:55  loss: 1.0650 (0.8631)  acc1: 76.0417 (80.7101)  acc5: 92.7083 (95.3973)  time: 0.2022  data: 0.0007  max mem: 2299
Test:  [350/521]  eta: 0:00:41  loss: 1.1358 (0.9081)  acc1: 73.9583 (79.5792)  acc5: 92.7083 (94.9074)  time: 0.2019  data: 0.0007  max mem: 2299
Test:  [400/521]  eta: 0:00:28  loss: 1.1156 (0.9378)  acc1: 77.0833 (78.9796)  acc5: 92.7083 (94.4929)  time: 0.2013  data: 0.0007  max mem: 2299
Test:  [450/521]  eta: 0:00:16  loss: 1.1751 (0.9651)  acc1: 73.9583 (78.3306)  acc5: 91.6667 (94.1842)  time: 0.2021  data: 0.0007  max mem: 2299
Test:  [500/521]  eta: 0:00:04  loss: 0.9814 (0.9709)  acc1: 78.1250 (78.1500)  acc5: 94.7917 (94.1596)  time: 0.2014  data: 0.0007  max mem: 2299
Test:  [520/521]  eta: 0:00:00  loss: 0.8800 (0.9712)  acc1: 78.1250 (78.0900)  acc5: 95.8333 (94.1680)  time: 0.2954  data: 0.0006  max mem: 2299
Test: Total time: 0:02:04 (0.2397 s / it)
* Acc@1 78.090 Acc@5 94.168 loss 0.971
-0.4931640625 1.0810546875
Accuracy on 50000 test images: 78.1%

Test: Total time: 0:00:57 (0.0229 s / it)
* Acc@1 77.880 Acc@5 95.480 loss 0.931
-0.46954017877578735 0.7760491967201233
Accuracy on 2500 test images: 77.9%

$ python main.py --model mobilevitv2_125 --weights weights/mobilevitv2-1.25.pt --data-path imagenet/val --use_amp
Creating model: mobilevitv2_125
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='mobilevitv2_125', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/mobilevitv2-1.25.pt')
number of params: 7478089
Test:  [  0/521]  eta: 2:17:36  loss: 0.4299 (0.4299)  acc1: 94.7917 (94.7917)  acc5: 98.9583 (98.9583)  time: 15.8474  data: 1.5780  max mem: 2861
Test:  [ 50/521]  eta: 0:04:27  loss: 0.6240 (0.6876)  acc1: 87.5000 (85.2328)  acc5: 96.8750 (96.8750)  time: 0.2621  data: 0.0007  max mem: 2861
Test:  [100/521]  eta: 0:02:54  loss: 0.7051 (0.7070)  acc1: 86.4583 (85.0763)  acc5: 96.8750 (96.8647)  time: 0.2605  data: 0.0007  max mem: 2861
Test:  [150/521]  eta: 0:02:15  loss: 0.7133 (0.7245)  acc1: 85.4167 (84.2232)  acc5: 97.9167 (96.9371)  time: 0.2601  data: 0.0007  max mem: 2861
Test:  [200/521]  eta: 0:01:48  loss: 0.6300 (0.7136)  acc1: 87.5000 (84.5978)  acc5: 97.9167 (97.0408)  time: 0.2608  data: 0.0007  max mem: 2861
Test:  [250/521]  eta: 0:01:27  loss: 0.9058 (0.7719)  acc1: 78.1250 (83.1964)  acc5: 94.7917 (96.3687)  time: 0.2603  data: 0.0007  max mem: 2861
Test:  [300/521]  eta: 0:01:09  loss: 0.9929 (0.8170)  acc1: 77.0833 (82.2017)  acc5: 94.7917 (95.8852)  time: 0.2607  data: 0.0007  max mem: 2861
Test:  [350/521]  eta: 0:00:52  loss: 0.9893 (0.8561)  acc1: 77.0833 (81.2470)  acc5: 93.7500 (95.4772)  time: 0.2604  data: 0.0007  max mem: 2861
Test:  [400/521]  eta: 0:00:36  loss: 1.0496 (0.8846)  acc1: 77.0833 (80.6058)  acc5: 92.7083 (95.1294)  time: 0.2606  data: 0.0007  max mem: 2861
Test:  [450/521]  eta: 0:00:20  loss: 1.0907 (0.9097)  acc1: 75.0000 (79.8342)  acc5: 92.7083 (94.8332)  time: 0.2607  data: 0.0007  max mem: 2861
Test:  [500/521]  eta: 0:00:06  loss: 0.8623 (0.9133)  acc1: 80.2083 (79.7364)  acc5: 95.8333 (94.8229)  time: 0.2606  data: 0.0007  max mem: 2861
Test:  [520/521]  eta: 0:00:00  loss: 0.7881 (0.9133)  acc1: 81.2500 (79.6860)  acc5: 96.8750 (94.8480)  time: 0.3787  data: 0.0006  max mem: 2861
Test: Total time: 0:02:37 (0.3022 s / it)
* Acc@1 79.686 Acc@5 94.848 loss 0.913
-0.335205078125 0.99853515625
Accuracy on 50000 test images: 79.7%

Test: Total time: 0:00:56 (0.0228 s / it)
* Acc@1 79.120 Acc@5 95.800 loss 0.881
-0.33100131154060364 0.715273380279541
Accuracy on 2500 test images: 79.1%

$ python main.py --model mobilevitv2_150 --weights weights/mobilevitv2-1.5.pt --data-path imagenet/val --use_amp
Creating model: mobilevitv2_150
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='mobilevitv2_150', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/mobilevitv2-1.5.pt')
number of params: 10594753
Test:  [  0/521]  eta: 2:25:39  loss: 0.3806 (0.3806)  acc1: 96.8750 (96.8750)  acc5: 97.9167 (97.9167)  time: 16.7747  data: 1.4021  max mem: 3425
Test:  [ 50/521]  eta: 0:04:58  loss: 0.5773 (0.6318)  acc1: 87.5000 (86.2745)  acc5: 97.9167 (97.4673)  time: 0.3103  data: 0.0008  max mem: 3425
Test:  [100/521]  eta: 0:03:19  loss: 0.6208 (0.6510)  acc1: 88.5417 (86.2314)  acc5: 97.9167 (97.2669)  time: 0.3112  data: 0.0008  max mem: 3425
Test:  [150/521]  eta: 0:02:35  loss: 0.6667 (0.6787)  acc1: 85.4167 (85.3684)  acc5: 96.8750 (97.2751)  time: 0.3103  data: 0.0008  max mem: 3425
Test:  [200/521]  eta: 0:02:05  loss: 0.5934 (0.6701)  acc1: 88.5417 (85.7639)  acc5: 97.9167 (97.3932)  time: 0.3103  data: 0.0008  max mem: 3425
Test:  [250/521]  eta: 0:01:41  loss: 0.8121 (0.7176)  acc1: 81.2500 (84.5203)  acc5: 95.8333 (96.9290)  time: 0.3105  data: 0.0008  max mem: 3425
Test:  [300/521]  eta: 0:01:20  loss: 0.8906 (0.7539)  acc1: 80.2083 (83.6344)  acc5: 94.7917 (96.5739)  time: 0.3109  data: 0.0008  max mem: 3425
Test:  [350/521]  eta: 0:01:01  loss: 0.9328 (0.7907)  acc1: 78.1250 (82.6478)  acc5: 95.8333 (96.2073)  time: 0.3110  data: 0.0009  max mem: 3425
Test:  [400/521]  eta: 0:00:42  loss: 0.8836 (0.8110)  acc1: 81.2500 (82.2293)  acc5: 94.7917 (95.9243)  time: 0.3099  data: 0.0008  max mem: 3425
Test:  [450/521]  eta: 0:00:24  loss: 0.9982 (0.8318)  acc1: 78.1250 (81.6981)  acc5: 93.7500 (95.7086)  time: 0.3097  data: 0.0008  max mem: 3425
Test:  [500/521]  eta: 0:00:07  loss: 0.8104 (0.8343)  acc1: 81.2500 (81.5702)  acc5: 95.8333 (95.6920)  time: 0.3092  data: 0.0008  max mem: 3425
Test:  [520/521]  eta: 0:00:00  loss: 0.7625 (0.8356)  acc1: 81.2500 (81.4660)  acc5: 96.8750 (95.6720)  time: 0.4388  data: 0.0006  max mem: 3425
Test: Total time: 0:03:04 (0.3546 s / it)
* Acc@1 81.466 Acc@5 95.672 loss 0.836
0.0005517005920410156 0.92919921875
Accuracy on 50000 test images: 81.5%

Test: Total time: 0:00:56 (0.0224 s / it)
* Acc@1 80.840 Acc@5 96.400 loss 0.804
0.0017669354565441608 0.7269705533981323
Accuracy on 2500 test images: 80.8%

$ python main.py --model mobilevitv2_175 --weights weights/mobilevitv2-1.75.pt --data-path imagenet/val --use_amp
Creating model: mobilevitv2_175
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='mobilevitv2_175', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/mobilevitv2-1.75.pt')
number of params: 14251833
Test:  [  0/521]  eta: 2:44:16  loss: 0.3937 (0.3937)  acc1: 93.7500 (93.7500)  acc5: 98.9583 (98.9583)  time: 18.9178  data: 3.1457  max mem: 3992
Test:  [ 50/521]  eta: 0:05:53  loss: 0.5732 (0.6221)  acc1: 89.5833 (86.8873)  acc5: 97.9167 (97.6511)  time: 0.3881  data: 0.0007  max mem: 3992
Test:  [100/521]  eta: 0:04:00  loss: 0.5997 (0.6359)  acc1: 88.5417 (86.7987)  acc5: 97.9167 (97.3494)  time: 0.3884  data: 0.0008  max mem: 3992
Test:  [150/521]  eta: 0:03:09  loss: 0.6707 (0.6618)  acc1: 85.4167 (85.8168)  acc5: 97.9167 (97.3786)  time: 0.3881  data: 0.0008  max mem: 3992
Test:  [200/521]  eta: 0:02:34  loss: 0.6011 (0.6564)  acc1: 87.5000 (85.9971)  acc5: 97.9167 (97.4658)  time: 0.3876  data: 0.0009  max mem: 3992
Test:  [250/521]  eta: 0:02:05  loss: 0.8221 (0.7050)  acc1: 82.2917 (84.8689)  acc5: 95.8333 (96.9705)  time: 0.3881  data: 0.0008  max mem: 3992
Test:  [300/521]  eta: 0:01:39  loss: 0.9308 (0.7454)  acc1: 79.1667 (83.9286)  acc5: 95.8333 (96.5739)  time: 0.3880  data: 0.0009  max mem: 3992
Test:  [350/521]  eta: 0:01:15  loss: 0.8403 (0.7779)  acc1: 80.2083 (83.1019)  acc5: 94.7917 (96.2251)  time: 0.3881  data: 0.0009  max mem: 3992
Test:  [400/521]  eta: 0:00:52  loss: 0.9070 (0.7986)  acc1: 81.2500 (82.6683)  acc5: 94.7917 (95.9996)  time: 0.3881  data: 0.0008  max mem: 3992
Test:  [450/521]  eta: 0:00:30  loss: 0.9912 (0.8195)  acc1: 78.1250 (82.1508)  acc5: 93.7500 (95.7941)  time: 0.3879  data: 0.0008  max mem: 3992
Test:  [500/521]  eta: 0:00:08  loss: 0.8011 (0.8219)  acc1: 82.2917 (81.9902)  acc5: 96.8750 (95.8021)  time: 0.3870  data: 0.0008  max mem: 3992
Test:  [520/521]  eta: 0:00:00  loss: 0.7439 (0.8232)  acc1: 82.2917 (81.9480)  acc5: 96.8750 (95.7900)  time: 0.5415  data: 0.0006  max mem: 3992
Test: Total time: 0:03:48 (0.4385 s / it)
* Acc@1 81.948 Acc@5 95.790 loss 0.823
0.00037169456481933594 0.92822265625
Accuracy on 50000 test images: 81.9%

Test: Total time: 0:00:55 (0.0223 s / it)
* Acc@1 80.760 Acc@5 96.720 loss 0.806
-0.0053720599971711636 0.6468448638916016
Accuracy on 2500 test images: 80.8%

$ python main.py --model mobilevitv2_200 --weights weights/mobilevitv2-2.0.pt --data-path imagenet/val --use_amp
Creating model: mobilevitv2_200
dict_keys(["..."])
Namespace(batch_size=64, data_path='imagenet/val', device='cuda', fuse=False, model='mobilevitv2_200', model_ema=False, num_workers=10, pin_mem=True, use_amp=True, usi_eval=False, weights='weights/mobilevitv2-2.0.pt')
number of params: 18449329
Test:  [  0/521]  eta: 3:14:18  loss: 0.3493 (0.3493)  acc1: 96.8750 (96.8750)  acc5: 97.9167 (97.9167)  time: 22.3770  data: 1.4886  max mem: 5327
Test:  [ 50/521]  eta: 0:06:42  loss: 0.5188 (0.6069)  acc1: 89.5833 (86.7239)  acc5: 97.9167 (97.6920)  time: 0.4213  data: 0.0008  max mem: 5327
Test:  [100/521]  eta: 0:04:29  loss: 0.7349 (0.6144)  acc1: 83.3333 (86.7987)  acc5: 96.8750 (97.6073)  time: 0.4209  data: 0.0010  max mem: 5327
Test:  [150/521]  eta: 0:03:30  loss: 0.5531 (0.6431)  acc1: 86.4583 (86.1134)  acc5: 97.9167 (97.5028)  time: 0.4209  data: 0.0008  max mem: 5327
Test:  [200/521]  eta: 0:02:50  loss: 0.6793 (0.6356)  acc1: 83.3333 (86.3910)  acc5: 96.8750 (97.5746)  time: 0.4197  data: 0.0008  max mem: 5327
Test:  [250/521]  eta: 0:02:17  loss: 0.9064 (0.6844)  acc1: 78.1250 (85.0930)  acc5: 94.7917 (97.0784)  time: 0.4193  data: 0.0009  max mem: 5327
Test:  [300/521]  eta: 0:01:49  loss: 0.6233 (0.7211)  acc1: 87.5000 (84.2331)  acc5: 96.8750 (96.7504)  time: 0.4212  data: 0.0009  max mem: 5327
Test:  [350/521]  eta: 0:01:22  loss: 0.7986 (0.7522)  acc1: 78.1250 (83.4491)  acc5: 96.8750 (96.4328)  time: 0.4210  data: 0.0008  max mem: 5327
Test:  [400/521]  eta: 0:00:57  loss: 0.9002 (0.7743)  acc1: 81.2500 (83.0164)  acc5: 94.7917 (96.1814)  time: 0.4205  data: 0.0008  max mem: 5327
Test:  [450/521]  eta: 0:00:33  loss: 0.9847 (0.7952)  acc1: 76.0417 (82.5180)  acc5: 94.7917 (95.9627)  time: 0.4215  data: 0.0009  max mem: 5327
Test:  [500/521]  eta: 0:00:09  loss: 0.6525 (0.7981)  acc1: 82.2917 (82.3998)  acc5: 97.9167 (95.9560)  time: 0.4211  data: 0.0009  max mem: 5327
Test:  [520/521]  eta: 0:00:00  loss: 0.6982 (0.7995)  acc1: 81.2500 (82.3300)  acc5: 97.9167 (95.9440)  time: 0.9854  data: 0.0005  max mem: 5327
Test: Total time: 0:04:12 (0.4851 s / it)
* Acc@1 82.330 Acc@5 95.944 loss 0.800
0.00130462646484375 0.88720703125
Accuracy on 50000 test images: 82.3%

Test: Total time: 0:00:55 (0.0224 s / it)
* Acc@1 81.960 Acc@5 96.840 loss 0.746
0.0035404530353844166 0.6021001935005188
Accuracy on 2500 test images: 82.0%